diff --git a/node_modules/gatsby/babel.config.js b/node_modules/gatsby/babel.config.js
new file mode 100644
index 0000000..6ae46be
--- /dev/null
+++ b/node_modules/gatsby/babel.config.js
@@ -0,0 +1,7 @@
+// This being a babel.config.js file instead of a .babelrc file allows the
+// packages in `internal-plugins` to be compiled with the rest of the source.
+// Ref: https://github.com/babel/babel/pull/7358
+module.exports = {
+  sourceMaps: true,
+  presets: [["babel-preset-gatsby-package"]],
+}
diff --git a/node_modules/gatsby/dist/bin/gatsby.js b/node_modules/gatsby/dist/bin/gatsby.js
old mode 100644
new mode 100755
diff --git a/node_modules/gatsby/dist/schema/graphql-engine/bundle-webpack.js b/node_modules/gatsby/dist/schema/graphql-engine/bundle-webpack.js
index 71dca09..991b480 100644
--- a/node_modules/gatsby/dist/schema/graphql-engine/bundle-webpack.js
+++ b/node_modules/gatsby/dist/schema/graphql-engine/bundle-webpack.js
@@ -166,7 +166,8 @@ async function createGraphqlEngineBundle(rootDir, reporter, isVerbose) {
       "process.env.GATSBY_SKIP_WRITING_SCHEMA_TO_FILE": `true`,
       "process.env.NODE_ENV": JSON.stringify(`production`),
       SCHEMA_SNAPSHOT: JSON.stringify(schemaSnapshotString),
-      "process.env.GATSBY_LOGGER": JSON.stringify(`yurnalist`)
+      "process.env.GATSBY_LOGGER": JSON.stringify(`yurnalist`),
+      "process.env.GATSBY_SLICES": JSON.stringify(!!process.env.GATSBY_SLICES)
     }), ((_process$env$GATSBY_W = process.env.GATSBY_WEBPACK_LOGGING) === null || _process$env$GATSBY_W === void 0 ? void 0 : _process$env$GATSBY_W.includes(`query-engine`)) && new _webpackLogging.WebpackLoggingPlugin(rootDir, reporter, isVerbose)].filter(Boolean)
   });
   return new Promise((resolve, reject) => {
diff --git a/node_modules/gatsby/dist/schema/graphql-engine/bundle-webpack.js.map b/node_modules/gatsby/dist/schema/graphql-engine/bundle-webpack.js.map
index e9dc147..631d16f 100644
--- a/node_modules/gatsby/dist/schema/graphql-engine/bundle-webpack.js.map
+++ b/node_modules/gatsby/dist/schema/graphql-engine/bundle-webpack.js.map
@@ -1 +1 @@
-{"version":3,"file":"bundle-webpack.js","names":["extensions","outputDir","path","join","process","cwd","cacheLocation","getApisToRemoveForQueryEngine","apisToKeep","Set","schemaCustomizationAPIs","add","apisToRemove","Object","keys","nodeApis","filter","api","has","createGraphqlEngineBundle","rootDir","reporter","isVerbose","schemaSnapshotString","fs","readFile","printQueryEnginePlugins","assetRelocatorUseEntry","loader","require","resolve","options","outputAssetBase","gatsbyPluginTSRequire","mod","createRequire","compiler","webpack","name","mode","entry","__dirname","output","filename","libraryTarget","target","externalsPresets","node","cache","type","buildDependencies","config","__filename","externals","builtinModules","reduce","acc","builtinModule","module","rules","oneOf","test","parser","amd","use","remove","jsx","exclude","presets","byDependency","esm","fullySpecified","alias","inquirer","lmdb","plugins","EnvironmentPlugin","DefinePlugin","JSON","stringify","SCHEMA_SNAPSHOT","env","GATSBY_WEBPACK_LOGGING","includes","WebpackLoggingPlugin","Boolean","Promise","reject","run","err","stats","getResourcePath","webpackModule","ConcatenatedModule","resource","modules","firstSubModule","undefined","iterateModules","webpackModules","compilation","resourcePath","importedBy","moduleGraph","getIssuer","structuredError","id","context","package","advisory","close","closeErr","e"],"sources":["../../../src/schema/graphql-engine/bundle-webpack.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as path from \"path\"\nimport * as fs from \"fs-extra\"\nimport webpack, { Module, NormalModule, Compilation } from \"webpack\"\nimport ConcatenatedModule from \"webpack/lib/optimize/ConcatenatedModule\"\nimport { printQueryEnginePlugins } from \"./print-plugins\"\nimport mod from \"module\"\nimport { WebpackLoggingPlugin } from \"../../utils/webpack/plugins/webpack-logging\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { schemaCustomizationAPIs } from \"./print-plugins\"\nimport type { GatsbyNodeAPI } from \"../../redux/types\"\nimport * as nodeApis from \"../../utils/api-node-docs\"\n\ntype Reporter = typeof reporter\n\nconst extensions = [`.mjs`, `.js`, `.json`, `.node`, `.ts`, `.tsx`]\n\nconst outputDir = path.join(process.cwd(), `.cache`, `query-engine`)\nconst cacheLocation = path.join(\n  process.cwd(),\n  `.cache`,\n  `webpack`,\n  `query-engine`\n)\n\nfunction getApisToRemoveForQueryEngine(): Array<GatsbyNodeAPI> {\n  const apisToKeep = new Set(schemaCustomizationAPIs)\n  apisToKeep.add(`onPluginInit`)\n\n  const apisToRemove = (Object.keys(nodeApis) as Array<GatsbyNodeAPI>).filter(\n    api => !apisToKeep.has(api)\n  )\n  return apisToRemove\n}\n\nexport async function createGraphqlEngineBundle(\n  rootDir: string,\n  reporter: Reporter,\n  isVerbose?: boolean\n): Promise<webpack.Compilation | undefined> {\n  const schemaSnapshotString = await fs.readFile(\n    path.join(rootDir, `.cache`, `schema.gql`),\n    `utf-8`\n  )\n  await printQueryEnginePlugins()\n\n  const assetRelocatorUseEntry = {\n    loader: require.resolve(`@vercel/webpack-asset-relocator-loader`),\n    options: {\n      outputAssetBase: `assets`,\n    },\n  }\n\n  const gatsbyPluginTSRequire = mod.createRequire(\n    require.resolve(`gatsby-plugin-typescript`)\n  )\n\n  const compiler = webpack({\n    name: `Query Engine`,\n    // mode: `production`,\n    mode: `none`,\n    entry: path.join(__dirname, `entry.js`),\n    output: {\n      path: outputDir,\n      filename: `index.js`,\n      libraryTarget: `commonjs`,\n    },\n    target: `node`,\n    externalsPresets: {\n      node: false,\n    },\n    cache: {\n      type: `filesystem`,\n      name: `graphql-engine`,\n      cacheLocation,\n      buildDependencies: {\n        config: [__filename],\n      },\n    },\n    // those are required in some runtime paths, but we don't need them\n    externals: [\n      `cbor-x`, // optional dep of lmdb-store, but we are using `msgpack` (default) encoding, so we don't need it\n      `babel-runtime/helpers/asyncToGenerator`, // undeclared dep of yurnalist (but used in code path we don't use)\n      `electron`, // :shrug: `got` seems to have electron specific code path\n      mod.builtinModules.reduce((acc, builtinModule) => {\n        if (builtinModule === `fs`) {\n          acc[builtinModule] = `global _actualFsWrapper`\n          acc[`node:${builtinModule}`] = `global _actualFsWrapper`\n        } else {\n          acc[builtinModule] = `commonjs ${builtinModule}`\n          acc[`node:${builtinModule}`] = `commonjs ${builtinModule}`\n        }\n\n        return acc\n      }, {}),\n    ],\n    module: {\n      rules: [\n        {\n          oneOf: [\n            {\n              // specific set of loaders for LMBD - our custom patch to massage lmdb to work with relocator -> relocator\n              test: /node_modules[/\\\\]lmdb[/\\\\].*\\.[cm]?js/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(`./lmdb-bundling-patch`),\n                },\n              ],\n            },\n            {\n              // specific set of loaders for gatsby-node files - our babel transform that removes lifecycles not needed for engine -> relocator\n              test: /gatsby-node\\.(cjs|mjs|js|ts)$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(\n                    `../../utils/webpack/loaders/webpack-remove-exports-loader`\n                  ),\n                  options: {\n                    remove: getApisToRemoveForQueryEngine(),\n                    jsx: false,\n                  },\n                },\n              ],\n            },\n            {\n              // generic loader for all other cases than lmdb or gatsby-node - we don't do anything special other than using relocator on it\n              // For node binary relocations, include \".node\" files as well here\n              test: /\\.(cjs|mjs|js|ts|node)$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: assetRelocatorUseEntry,\n            },\n          ],\n        },\n        {\n          test: /\\.ts$/,\n          exclude: /node_modules/,\n          use: {\n            loader: require.resolve(`babel-loader`),\n            options: {\n              presets: [\n                gatsbyPluginTSRequire.resolve(`@babel/preset-typescript`),\n              ],\n            },\n          },\n        },\n        {\n          test: /\\.m?js$/,\n          type: `javascript/auto`,\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n        },\n        {\n          test: /\\.txt/,\n          type: `asset/resource`,\n        },\n      ],\n    },\n    resolve: {\n      extensions,\n      alias: {\n        \".cache\": process.cwd() + `/.cache/`,\n\n        [require.resolve(`gatsby-cli/lib/reporter/loggers/ink/index.js`)]:\n          false,\n        inquirer: false,\n        // only load one version of lmdb\n        lmdb: require.resolve(`lmdb`),\n        \"ts-node\": require.resolve(`./shims/ts-node`),\n        \"gatsby-sharp$\": require.resolve(`./shims/gatsby-sharp`),\n      },\n    },\n    plugins: [\n      new webpack.EnvironmentPlugin([`GATSBY_CLOUD_IMAGE_CDN`]),\n      new webpack.DefinePlugin({\n        // \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n        \"process.env.GATSBY_EXPERIMENTAL_LMDB_STORE\": `true`,\n        \"process.env.GATSBY_SKIP_WRITING_SCHEMA_TO_FILE\": `true`,\n        \"process.env.NODE_ENV\": JSON.stringify(`production`),\n        SCHEMA_SNAPSHOT: JSON.stringify(schemaSnapshotString),\n        \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n      }),\n      process.env.GATSBY_WEBPACK_LOGGING?.includes(`query-engine`) &&\n        new WebpackLoggingPlugin(rootDir, reporter, isVerbose),\n    ].filter(Boolean) as Array<webpack.WebpackPluginInstance>,\n  })\n\n  return new Promise((resolve, reject) => {\n    compiler.run((err, stats): void => {\n      function getResourcePath(\n        webpackModule?: Module | NormalModule | ConcatenatedModule | null\n      ): string | undefined {\n        if (webpackModule && !(webpackModule instanceof ConcatenatedModule)) {\n          return (webpackModule as NormalModule).resource\n        }\n\n        if (webpackModule?.modules) {\n          // ConcatenatedModule is a collection of modules so we have to go deeper to actually get a path,\n          // at this point we won't know which one so we just grab first module here\n          const [firstSubModule] = webpackModule.modules\n          return getResourcePath(firstSubModule)\n        }\n\n        return undefined\n      }\n\n      function iterateModules(\n        webpackModules: Set<Module>,\n        compilation: Compilation\n      ): void {\n        for (const webpackModule of webpackModules) {\n          if (webpackModule instanceof ConcatenatedModule) {\n            iterateModules(\n              (webpackModule as ConcatenatedModule).modules,\n              compilation\n            )\n          } else {\n            const resourcePath = getResourcePath(webpackModule)\n            if (resourcePath?.includes(`ts-node`)) {\n              const importedBy = getResourcePath(\n                compilation.moduleGraph.getIssuer(webpackModule)\n              )\n              const structuredError = {\n                id: `98011`,\n                context: {\n                  package: `ts-node`,\n                  importedBy,\n                  advisory: `Gatsby is supporting TypeScript natively (see https://gatsby.dev/typescript). \"ts-node\" might not be needed anymore at all, consider removing it.`,\n                },\n              }\n              throw structuredError\n            }\n          }\n        }\n      }\n\n      try {\n        if (stats?.compilation.modules) {\n          iterateModules(stats.compilation.modules, stats.compilation)\n        }\n\n        compiler.close(closeErr => {\n          if (err) {\n            return reject(err)\n          }\n          if (closeErr) {\n            return reject(closeErr)\n          }\n          return resolve(stats?.compilation)\n        })\n      } catch (e) {\n        reject(e)\n      }\n    })\n  })\n}\n"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"bundle-webpack.js","names":["extensions","outputDir","path","join","process","cwd","cacheLocation","getApisToRemoveForQueryEngine","apisToKeep","Set","schemaCustomizationAPIs","add","apisToRemove","Object","keys","nodeApis","filter","api","has","createGraphqlEngineBundle","rootDir","reporter","isVerbose","schemaSnapshotString","fs","readFile","printQueryEnginePlugins","assetRelocatorUseEntry","loader","require","resolve","options","outputAssetBase","gatsbyPluginTSRequire","mod","createRequire","compiler","webpack","name","mode","entry","__dirname","output","filename","libraryTarget","target","externalsPresets","node","cache","type","buildDependencies","config","__filename","externals","builtinModules","reduce","acc","builtinModule","module","rules","oneOf","test","parser","amd","use","remove","jsx","exclude","presets","byDependency","esm","fullySpecified","alias","inquirer","lmdb","plugins","EnvironmentPlugin","DefinePlugin","JSON","stringify","SCHEMA_SNAPSHOT","env","GATSBY_SLICES","GATSBY_WEBPACK_LOGGING","includes","WebpackLoggingPlugin","Boolean","Promise","reject","run","err","stats","getResourcePath","webpackModule","ConcatenatedModule","resource","modules","firstSubModule","undefined","iterateModules","webpackModules","compilation","resourcePath","importedBy","moduleGraph","getIssuer","structuredError","id","context","package","advisory","close","closeErr","e"],"sources":["../../../src/schema/graphql-engine/bundle-webpack.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as path from \"path\"\nimport * as fs from \"fs-extra\"\nimport webpack, { Module, NormalModule, Compilation } from \"webpack\"\nimport ConcatenatedModule from \"webpack/lib/optimize/ConcatenatedModule\"\nimport { printQueryEnginePlugins } from \"./print-plugins\"\nimport mod from \"module\"\nimport { WebpackLoggingPlugin } from \"../../utils/webpack/plugins/webpack-logging\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { schemaCustomizationAPIs } from \"./print-plugins\"\nimport type { GatsbyNodeAPI } from \"../../redux/types\"\nimport * as nodeApis from \"../../utils/api-node-docs\"\n\ntype Reporter = typeof reporter\n\nconst extensions = [`.mjs`, `.js`, `.json`, `.node`, `.ts`, `.tsx`]\n\nconst outputDir = path.join(process.cwd(), `.cache`, `query-engine`)\nconst cacheLocation = path.join(\n  process.cwd(),\n  `.cache`,\n  `webpack`,\n  `query-engine`\n)\n\nfunction getApisToRemoveForQueryEngine(): Array<GatsbyNodeAPI> {\n  const apisToKeep = new Set(schemaCustomizationAPIs)\n  apisToKeep.add(`onPluginInit`)\n\n  const apisToRemove = (Object.keys(nodeApis) as Array<GatsbyNodeAPI>).filter(\n    api => !apisToKeep.has(api)\n  )\n  return apisToRemove\n}\n\nexport async function createGraphqlEngineBundle(\n  rootDir: string,\n  reporter: Reporter,\n  isVerbose?: boolean\n): Promise<webpack.Compilation | undefined> {\n  const schemaSnapshotString = await fs.readFile(\n    path.join(rootDir, `.cache`, `schema.gql`),\n    `utf-8`\n  )\n  await printQueryEnginePlugins()\n\n  const assetRelocatorUseEntry = {\n    loader: require.resolve(`@vercel/webpack-asset-relocator-loader`),\n    options: {\n      outputAssetBase: `assets`,\n    },\n  }\n\n  const gatsbyPluginTSRequire = mod.createRequire(\n    require.resolve(`gatsby-plugin-typescript`)\n  )\n\n  const compiler = webpack({\n    name: `Query Engine`,\n    // mode: `production`,\n    mode: `none`,\n    entry: path.join(__dirname, `entry.js`),\n    output: {\n      path: outputDir,\n      filename: `index.js`,\n      libraryTarget: `commonjs`,\n    },\n    target: `node`,\n    externalsPresets: {\n      node: false,\n    },\n    cache: {\n      type: `filesystem`,\n      name: `graphql-engine`,\n      cacheLocation,\n      buildDependencies: {\n        config: [__filename],\n      },\n    },\n    // those are required in some runtime paths, but we don't need them\n    externals: [\n      `cbor-x`, // optional dep of lmdb-store, but we are using `msgpack` (default) encoding, so we don't need it\n      `babel-runtime/helpers/asyncToGenerator`, // undeclared dep of yurnalist (but used in code path we don't use)\n      `electron`, // :shrug: `got` seems to have electron specific code path\n      mod.builtinModules.reduce((acc, builtinModule) => {\n        if (builtinModule === `fs`) {\n          acc[builtinModule] = `global _actualFsWrapper`\n          acc[`node:${builtinModule}`] = `global _actualFsWrapper`\n        } else {\n          acc[builtinModule] = `commonjs ${builtinModule}`\n          acc[`node:${builtinModule}`] = `commonjs ${builtinModule}`\n        }\n\n        return acc\n      }, {}),\n    ],\n    module: {\n      rules: [\n        {\n          oneOf: [\n            {\n              // specific set of loaders for LMBD - our custom patch to massage lmdb to work with relocator -> relocator\n              test: /node_modules[/\\\\]lmdb[/\\\\].*\\.[cm]?js/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(`./lmdb-bundling-patch`),\n                },\n              ],\n            },\n            {\n              // specific set of loaders for gatsby-node files - our babel transform that removes lifecycles not needed for engine -> relocator\n              test: /gatsby-node\\.(cjs|mjs|js|ts)$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(\n                    `../../utils/webpack/loaders/webpack-remove-exports-loader`\n                  ),\n                  options: {\n                    remove: getApisToRemoveForQueryEngine(),\n                    jsx: false,\n                  },\n                },\n              ],\n            },\n            {\n              // generic loader for all other cases than lmdb or gatsby-node - we don't do anything special other than using relocator on it\n              // For node binary relocations, include \".node\" files as well here\n              test: /\\.(cjs|mjs|js|ts|node)$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: assetRelocatorUseEntry,\n            },\n          ],\n        },\n        {\n          test: /\\.ts$/,\n          exclude: /node_modules/,\n          use: {\n            loader: require.resolve(`babel-loader`),\n            options: {\n              presets: [\n                gatsbyPluginTSRequire.resolve(`@babel/preset-typescript`),\n              ],\n            },\n          },\n        },\n        {\n          test: /\\.m?js$/,\n          type: `javascript/auto`,\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n        },\n        {\n          test: /\\.txt/,\n          type: `asset/resource`,\n        },\n      ],\n    },\n    resolve: {\n      extensions,\n      alias: {\n        \".cache\": process.cwd() + `/.cache/`,\n\n        [require.resolve(`gatsby-cli/lib/reporter/loggers/ink/index.js`)]:\n          false,\n        inquirer: false,\n        // only load one version of lmdb\n        lmdb: require.resolve(`lmdb`),\n        \"ts-node\": require.resolve(`./shims/ts-node`),\n        \"gatsby-sharp$\": require.resolve(`./shims/gatsby-sharp`),\n      },\n    },\n    plugins: [\n      new webpack.EnvironmentPlugin([`GATSBY_CLOUD_IMAGE_CDN`]),\n      new webpack.DefinePlugin({\n        // \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n        \"process.env.GATSBY_EXPERIMENTAL_LMDB_STORE\": `true`,\n        \"process.env.GATSBY_SKIP_WRITING_SCHEMA_TO_FILE\": `true`,\n        \"process.env.NODE_ENV\": JSON.stringify(`production`),\n        SCHEMA_SNAPSHOT: JSON.stringify(schemaSnapshotString),\n        \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n        \"process.env.GATSBY_SLICES\": JSON.stringify(\n          !!process.env.GATSBY_SLICES\n        ),\n      }),\n      process.env.GATSBY_WEBPACK_LOGGING?.includes(`query-engine`) &&\n        new WebpackLoggingPlugin(rootDir, reporter, isVerbose),\n    ].filter(Boolean) as Array<webpack.WebpackPluginInstance>,\n  })\n\n  return new Promise((resolve, reject) => {\n    compiler.run((err, stats): void => {\n      function getResourcePath(\n        webpackModule?: Module | NormalModule | ConcatenatedModule | null\n      ): string | undefined {\n        if (webpackModule && !(webpackModule instanceof ConcatenatedModule)) {\n          return (webpackModule as NormalModule).resource\n        }\n\n        if (webpackModule?.modules) {\n          // ConcatenatedModule is a collection of modules so we have to go deeper to actually get a path,\n          // at this point we won't know which one so we just grab first module here\n          const [firstSubModule] = webpackModule.modules\n          return getResourcePath(firstSubModule)\n        }\n\n        return undefined\n      }\n\n      function iterateModules(\n        webpackModules: Set<Module>,\n        compilation: Compilation\n      ): void {\n        for (const webpackModule of webpackModules) {\n          if (webpackModule instanceof ConcatenatedModule) {\n            iterateModules(\n              (webpackModule as ConcatenatedModule).modules,\n              compilation\n            )\n          } else {\n            const resourcePath = getResourcePath(webpackModule)\n            if (resourcePath?.includes(`ts-node`)) {\n              const importedBy = getResourcePath(\n                compilation.moduleGraph.getIssuer(webpackModule)\n              )\n              const structuredError = {\n                id: `98011`,\n                context: {\n                  package: `ts-node`,\n                  importedBy,\n                  advisory: `Gatsby is supporting TypeScript natively (see https://gatsby.dev/typescript). \"ts-node\" might not be needed anymore at all, consider removing it.`,\n                },\n              }\n              throw structuredError\n            }\n          }\n        }\n      }\n\n      try {\n        if (stats?.compilation.modules) {\n          iterateModules(stats.compilation.modules, stats.compilation)\n        }\n\n        compiler.close(closeErr => {\n          if (err) {\n            return reject(err)\n          }\n          if (closeErr) {\n            return reject(closeErr)\n          }\n          return resolve(stats?.compilation)\n        })\n      } catch (e) {\n        reject(e)\n      }\n    })\n  })\n}\n"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/gatsby/dist/utils/page-data.d.ts b/node_modules/gatsby/dist/utils/page-data.d.ts
index 93788e5..d0271ff 100644
--- a/node_modules/gatsby/dist/utils/page-data.d.ts
+++ b/node_modules/gatsby/dist/utils/page-data.d.ts
@@ -8,6 +8,11 @@ import { ICollectedSlices } from "./babel/find-slices";
 export interface IPageDataWithQueryResult extends IPageData {
     result: IExecutionResult;
 }
+export interface ISliceData {
+    componentChunkName: string;
+    result: IExecutionResult;
+    staticQueryHashes: Array<string>;
+}
 export declare function readPageData(publicDir: string, pagePath: string): Promise<IPageDataWithQueryResult>;
 export declare function removePageData(publicDir: string, pagePath: string): Promise<void>;
 export declare function pageDataExists(publicDir: string, pagePath: string): boolean;
diff --git a/node_modules/gatsby/dist/utils/page-data.js b/node_modules/gatsby/dist/utils/page-data.js
index 538c080..ad46ce1 100644
--- a/node_modules/gatsby/dist/utils/page-data.js
+++ b/node_modules/gatsby/dist/utils/page-data.js
@@ -145,11 +145,12 @@ async function writeSliceData(publicDir, {
 
   const outputFilePath = _path.default.join(publicDir, `slice-data`, `${name}.json`);
 
-  const body = JSON.stringify({
+  const sliceData = {
     componentChunkName,
     result,
     staticQueryHashes
-  });
+  };
+  const body = JSON.stringify(sliceData);
   const sliceDataSize = Buffer.byteLength(body) / 1000;
 
   _redux.store.dispatch({
diff --git a/node_modules/gatsby/dist/utils/page-data.js.map b/node_modules/gatsby/dist/utils/page-data.js.map
index 0c1609e..26999ff 100644
--- a/node_modules/gatsby/dist/utils/page-data.js.map
+++ b/node_modules/gatsby/dist/utils/page-data.js.map
@@ -1 +1 @@
-{"version":3,"file":"page-data.js","names":["readPageData","publicDir","pagePath","filePath","generatePageDataPath","rawPageData","fs","readFile","JSON","parse","removePageData","existsSync","remove","Promise","resolve","pageDataExists","lmdbPageQueryResultsCache","getLMDBPageQueryResultsCache","GatsbyCacheLmdbImpl","require","default","name","encoding","init","savePageQueryResultsPromise","waitUntilPageQueryResultsAreStored","savePageQueryResult","programDir","stringifiedResult","isLmdbStore","set","pageQueryResultsPath","path","join","replace","outputFile","readPageQueryResult","get","Error","writePageData","pageData","slicesUsedByTemplates","slices","result","outputFilePath","body","constructPageDataString","pageDataSize","Buffer","byteLength","store","dispatch","type","payload","size","pageDataHash","createContentDigest","ensureFileContent","writeSliceData","componentChunkName","staticQueryHashes","toString","stringify","sliceDataSize","sliceName","sliceDataHash","readSliceData","isFlushPending","isFlushing","isFlushEnqueued","flush","parentSpan","pendingPageDataWrites","pages","program","staticQueriesByTemplate","queries","slicesByTemplate","getState","isBuild","_","pagePaths","sliceNames","writePageDataActivity","nodeManifestPagePathMap","processNodeManifests","reporter","createProgress","id","start","flushQueue","fastq","task","cb","page","shouldClearPendingWrite","manifestId","process","env","GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND","query","trackedQueries","hasFlag","dirty","FLAG_DIRTY_NEW_PAGE","setImmediate","getPageMode","componentPath","directory","websocketManager","emitPageData","e","panicOnBuild","tick","slice","emitSliceData","push","idle","drain","end","enqueueFlush","isWebpackStatusPending","handleStalePageData","pathExists","activity","activityTimer","pageDataFilesFromPreviousBuilds","reject","results","Set","stream","fsWalkStream","on","data","add","expectedPageDataFiles","forEach","deletionPromises","pageDataFilePath","has","all"],"sources":["../../src/utils/page-data.ts"],"sourcesContent":["import { walkStream as fsWalkStream, Entry } from \"@nodelib/fs.walk\"\nimport fs from \"fs-extra\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport fastq from \"fastq\"\nimport path from \"path\"\nimport { createContentDigest, generatePageDataPath } from \"gatsby-core-utils\"\nimport { websocketManager } from \"./websocket-manager\"\nimport { isWebpackStatusPending } from \"./webpack-status\"\nimport { store } from \"../redux\"\nimport type { IGatsbySlice, IGatsbyState } from \"../redux/types\"\nimport { hasFlag, FLAG_DIRTY_NEW_PAGE } from \"../redux/reducers/queries\"\nimport { isLmdbStore } from \"../datastore\"\nimport type GatsbyCacheLmdb from \"./cache-lmdb\"\nimport {\n  constructPageDataString,\n  reverseFixedPagePath,\n  IPageData,\n  IPageDataInput,\n} from \"./page-data-helpers\"\nimport { Span } from \"opentracing\"\n\nexport { reverseFixedPagePath }\nimport { processNodeManifests } from \"../utils/node-manifest\"\nimport { IExecutionResult } from \"../query/types\"\nimport { getPageMode } from \"./page-mode\"\nimport { ICollectedSlices } from \"./babel/find-slices\"\nimport { ensureFileContent } from \"./ensure-file-content\"\n\nexport interface IPageDataWithQueryResult extends IPageData {\n  result: IExecutionResult\n}\n\nexport async function readPageData(\n  publicDir: string,\n  pagePath: string\n): Promise<IPageDataWithQueryResult> {\n  const filePath = generatePageDataPath(publicDir, pagePath)\n  const rawPageData = await fs.readFile(filePath, `utf-8`)\n  return JSON.parse(rawPageData)\n}\n\nexport async function removePageData(\n  publicDir: string,\n  pagePath: string\n): Promise<void> {\n  const filePath = generatePageDataPath(publicDir, pagePath)\n\n  if (fs.existsSync(filePath)) {\n    return await fs.remove(filePath)\n  }\n\n  return Promise.resolve()\n}\n\nexport function pageDataExists(publicDir: string, pagePath: string): boolean {\n  return fs.existsSync(generatePageDataPath(publicDir, pagePath))\n}\n\nlet lmdbPageQueryResultsCache: GatsbyCacheLmdb\nfunction getLMDBPageQueryResultsCache(): GatsbyCacheLmdb {\n  if (!lmdbPageQueryResultsCache) {\n    const GatsbyCacheLmdbImpl = require(`./cache-lmdb`).default\n    lmdbPageQueryResultsCache = new GatsbyCacheLmdbImpl({\n      name: `internal-tmp-query-results`,\n      encoding: `string`,\n    }).init()\n  }\n  return lmdbPageQueryResultsCache\n}\n\nlet savePageQueryResultsPromise = Promise.resolve()\n\nexport function waitUntilPageQueryResultsAreStored(): Promise<void> {\n  return savePageQueryResultsPromise\n}\n\nexport async function savePageQueryResult(\n  programDir: string,\n  pagePath: string,\n  stringifiedResult: string\n): Promise<void> {\n  if (isLmdbStore()) {\n    savePageQueryResultsPromise = getLMDBPageQueryResultsCache().set(\n      pagePath,\n      stringifiedResult\n    ) as Promise<void>\n  } else {\n    const pageQueryResultsPath = path.join(\n      programDir,\n      `.cache`,\n      `json`,\n      `${pagePath.replace(/\\//g, `_`)}.json`\n    )\n    await fs.outputFile(pageQueryResultsPath, stringifiedResult)\n  }\n}\n\nexport async function readPageQueryResult(\n  publicDir: string,\n  pagePath: string\n): Promise<string | Buffer> {\n  if (isLmdbStore()) {\n    const stringifiedResult = await getLMDBPageQueryResultsCache().get(pagePath)\n    if (typeof stringifiedResult === `string`) {\n      return stringifiedResult\n    }\n    throw new Error(`Couldn't find temp query result for \"${pagePath}\".`)\n  } else {\n    const pageQueryResultsPath = path.join(\n      publicDir,\n      `..`,\n      `.cache`,\n      `json`,\n      `${pagePath.replace(/\\//g, `_`)}.json`\n    )\n    return fs.readFile(pageQueryResultsPath)\n  }\n}\n\nexport async function writePageData(\n  publicDir: string,\n  pageData: IPageDataInput,\n  slicesUsedByTemplates: Map<string, ICollectedSlices>,\n  slices: IGatsbyState[\"slices\"]\n): Promise<string> {\n  const result = await readPageQueryResult(publicDir, pageData.path)\n\n  const outputFilePath = generatePageDataPath(publicDir, pageData.path)\n\n  const body = constructPageDataString(\n    pageData,\n    result,\n    slicesUsedByTemplates,\n    slices\n  )\n\n  // transform asset size to kB (from bytes) to fit 64 bit to numbers\n  const pageDataSize = Buffer.byteLength(body) / 1000\n\n  store.dispatch({\n    type: `ADD_PAGE_DATA_STATS`,\n    payload: {\n      pagePath: pageData.path,\n      filePath: outputFilePath,\n      size: pageDataSize,\n      pageDataHash: createContentDigest(body),\n    },\n  })\n\n  await ensureFileContent(outputFilePath, body)\n  return body\n}\n\nexport async function writeSliceData(\n  publicDir: string,\n  { componentChunkName, name }: IGatsbySlice,\n  staticQueryHashes: Array<string>\n): Promise<string> {\n  const result = JSON.parse(\n    (await readPageQueryResult(publicDir, `slice--${name}`)).toString()\n  )\n\n  const outputFilePath = path.join(publicDir, `slice-data`, `${name}.json`)\n\n  const body = JSON.stringify({\n    componentChunkName,\n    result,\n    staticQueryHashes,\n  })\n\n  const sliceDataSize = Buffer.byteLength(body) / 1000\n\n  store.dispatch({\n    type: `ADD_SLICE_DATA_STATS`,\n    payload: {\n      sliceName: name,\n      filePath: outputFilePath,\n      size: sliceDataSize,\n      sliceDataHash: createContentDigest(body),\n    },\n  })\n\n  await ensureFileContent(outputFilePath, body)\n  return body\n}\n\nexport async function readSliceData(\n  publicDir: string,\n  sliceName: string\n): Promise<IPageDataWithQueryResult> {\n  const filePath = path.join(publicDir, `slice-data`, `${sliceName}.json`)\n  const rawPageData = await fs.readFile(filePath, `utf-8`)\n  return JSON.parse(rawPageData)\n}\n\nlet isFlushPending = false\nlet isFlushing = false\n\nexport function isFlushEnqueued(): boolean {\n  return isFlushPending\n}\n\ntype IDataTask =\n  | {\n      type: \"page\"\n      pagePath: string\n    }\n  | {\n      type: \"slice\"\n      sliceName: string\n    }\n\nexport async function flush(parentSpan?: Span): Promise<void> {\n  if (isFlushing) {\n    // We're already in the middle of a flush\n    return\n  }\n  await waitUntilPageQueryResultsAreStored()\n  isFlushPending = false\n  isFlushing = true\n  const {\n    pendingPageDataWrites,\n    pages,\n    program,\n    staticQueriesByTemplate,\n    queries,\n    slices,\n    slicesByTemplate,\n  } = store.getState()\n  const isBuild = program?._?.[0] !== `develop`\n\n  const { pagePaths, sliceNames } = pendingPageDataWrites\n  let writePageDataActivity\n\n  let nodeManifestPagePathMap\n\n  if (pagePaths.size > 0) {\n    // we process node manifests in this location because we need to add the manifestId to the page data.\n    // We use this manifestId to determine if the page data is up to date when routing. Here we create a map of \"pagePath\": \"manifestId\" while processing and writing node manifest files.\n    // We only do this when there are pending page-data writes because otherwise we could flush pending createNodeManifest calls before page-data.json files are written. Which means those page-data files wouldn't have the corresponding manifest id's written to them.\n    nodeManifestPagePathMap = await processNodeManifests()\n  }\n\n  if (pagePaths.size > 0 || sliceNames.size > 0) {\n    writePageDataActivity = reporter.createProgress(\n      `Writing page-data.json and slice-data.json files to public directory`,\n      pagePaths.size + sliceNames.size,\n      0,\n      { id: `write-page-data-public-directory`, parentSpan }\n    )\n    writePageDataActivity.start()\n  }\n\n  const flushQueue = fastq<void, IDataTask, boolean>(async (task, cb) => {\n    if (task.type === `page`) {\n      const { pagePath } = task\n      const page = pages.get(pagePath)\n\n      let shouldClearPendingWrite = true\n\n      // It's a gloomy day in Bombay, let me tell you a short story...\n      // Once upon a time, writing page-data.json files were atomic\n      // After this change (#24808), they are not and this means that\n      // between adding a pending write for a page and actually flushing\n      // them, a page might not exist anymore щ（ﾟДﾟщ）\n      // This is why we need this check\n      if (page) {\n        if (page.path && nodeManifestPagePathMap) {\n          page.manifestId = nodeManifestPagePathMap.get(page.path)\n        }\n\n        if (!isBuild && process.env.GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND) {\n          // check if already did run query for this page\n          // with query-on-demand we might have pending page-data write due to\n          // changes in static queries assigned to page template, but we might not\n          // have query result for it\n          const query = queries.trackedQueries.get(page.path)\n          if (!query) {\n            // this should not happen ever\n            throw new Error(\n              `We have a page, but we don't have registered query for it (???)`\n            )\n          }\n\n          if (hasFlag(query.dirty, FLAG_DIRTY_NEW_PAGE)) {\n            // query results are not written yet\n            setImmediate(() => cb(null, true))\n            return\n          }\n        }\n\n        // In develop we rely on QUERY_ON_DEMAND so we just go through\n        // In build we only build these page-json for SSG pages\n        if (!isBuild || (isBuild && getPageMode(page) === `SSG`)) {\n          const staticQueryHashes =\n            staticQueriesByTemplate.get(page.componentPath) || []\n\n          try {\n            const result = await writePageData(\n              path.join(program.directory, `public`),\n              {\n                ...page,\n                staticQueryHashes,\n              },\n              slicesByTemplate,\n              slices\n            )\n\n            if (!isBuild) {\n              websocketManager.emitPageData({\n                id: pagePath,\n                result: JSON.parse(result) as IPageDataWithQueryResult,\n              })\n            }\n          } catch (e) {\n            shouldClearPendingWrite = false\n            reporter.panicOnBuild(\n              `Failed to write page-data for \"\"${page.path}`,\n              e\n            )\n          }\n          writePageDataActivity.tick()\n        }\n      }\n\n      if (shouldClearPendingWrite) {\n        store.dispatch({\n          type: `CLEAR_PENDING_PAGE_DATA_WRITE`,\n          payload: {\n            page: pagePath,\n          },\n        })\n      }\n    } else if (task.type === `slice`) {\n      const { sliceName } = task\n      const slice = slices.get(sliceName)\n      if (slice) {\n        const staticQueryHashes =\n          staticQueriesByTemplate.get(slice.componentPath) || []\n\n        const result = await writeSliceData(\n          path.join(program.directory, `public`),\n          slice,\n          staticQueryHashes\n        )\n\n        writePageDataActivity.tick()\n\n        if (!isBuild) {\n          websocketManager.emitSliceData({\n            id: sliceName,\n            result: JSON.parse(result) as IPageDataWithQueryResult,\n          })\n        }\n      }\n\n      store.dispatch({\n        type: `CLEAR_PENDING_SLICE_DATA_WRITE`,\n        payload: {\n          name: sliceName,\n        },\n      })\n    }\n\n    // `setImmediate` below is a workaround against stack overflow\n    // occurring when there are many non-SSG pages\n    setImmediate(() => cb(null, true))\n    return\n  }, 25)\n\n  for (const pagePath of pagePaths) {\n    flushQueue.push({ type: `page`, pagePath }, () => {})\n  }\n  for (const sliceName of sliceNames) {\n    flushQueue.push({ type: `slice`, sliceName }, () => {})\n  }\n\n  if (!flushQueue.idle()) {\n    await new Promise(resolve => {\n      flushQueue.drain = resolve as () => unknown\n    })\n  }\n  if (writePageDataActivity) {\n    writePageDataActivity.end()\n  }\n\n  isFlushing = false\n\n  return\n}\n\nexport function enqueueFlush(parentSpan?: Span): void {\n  if (isWebpackStatusPending()) {\n    isFlushPending = true\n  } else {\n    flush(parentSpan)\n  }\n}\n\nexport async function handleStalePageData(parentSpan: Span): Promise<void> {\n  if (!(await fs.pathExists(`public/page-data`))) {\n    return\n  }\n\n  // public directory might have stale page-data files from previous builds\n  // we get the list of those and compare against expected page-data files\n  // and remove ones that shouldn't be there anymore\n\n  const activity = reporter.activityTimer(`Cleaning up stale page-data`, {\n    parentSpan,\n  })\n  activity.start()\n\n  const pageDataFilesFromPreviousBuilds = await new Promise<Set<string>>(\n    (resolve, reject) => {\n      const results = new Set<string>()\n\n      const stream = fsWalkStream(`public/page-data`)\n\n      stream.on(`data`, (data: Entry) => {\n        if (data.name === `page-data.json`) {\n          results.add(data.path)\n        }\n      })\n\n      stream.on(`error`, e => {\n        reject(e)\n      })\n\n      stream.on(`end`, () => resolve(results))\n    }\n  )\n\n  const expectedPageDataFiles = new Set<string>()\n  store.getState().pages.forEach(page => {\n    expectedPageDataFiles.add(generatePageDataPath(`public`, page.path))\n  })\n\n  const deletionPromises: Array<Promise<void>> = []\n  pageDataFilesFromPreviousBuilds.forEach(pageDataFilePath => {\n    if (!expectedPageDataFiles.has(pageDataFilePath)) {\n      deletionPromises.push(fs.remove(pageDataFilePath))\n    }\n  })\n\n  await Promise.all(deletionPromises)\n\n  activity.end()\n}\n"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"page-data.js","names":["readPageData","publicDir","pagePath","filePath","generatePageDataPath","rawPageData","fs","readFile","JSON","parse","removePageData","existsSync","remove","Promise","resolve","pageDataExists","lmdbPageQueryResultsCache","getLMDBPageQueryResultsCache","GatsbyCacheLmdbImpl","require","default","name","encoding","init","savePageQueryResultsPromise","waitUntilPageQueryResultsAreStored","savePageQueryResult","programDir","stringifiedResult","isLmdbStore","set","pageQueryResultsPath","path","join","replace","outputFile","readPageQueryResult","get","Error","writePageData","pageData","slicesUsedByTemplates","slices","result","outputFilePath","body","constructPageDataString","pageDataSize","Buffer","byteLength","store","dispatch","type","payload","size","pageDataHash","createContentDigest","ensureFileContent","writeSliceData","componentChunkName","staticQueryHashes","toString","sliceData","stringify","sliceDataSize","sliceName","sliceDataHash","readSliceData","isFlushPending","isFlushing","isFlushEnqueued","flush","parentSpan","pendingPageDataWrites","pages","program","staticQueriesByTemplate","queries","slicesByTemplate","getState","isBuild","_","pagePaths","sliceNames","writePageDataActivity","nodeManifestPagePathMap","processNodeManifests","reporter","createProgress","id","start","flushQueue","fastq","task","cb","page","shouldClearPendingWrite","manifestId","process","env","GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND","query","trackedQueries","hasFlag","dirty","FLAG_DIRTY_NEW_PAGE","setImmediate","getPageMode","componentPath","directory","websocketManager","emitPageData","e","panicOnBuild","tick","slice","emitSliceData","push","idle","drain","end","enqueueFlush","isWebpackStatusPending","handleStalePageData","pathExists","activity","activityTimer","pageDataFilesFromPreviousBuilds","reject","results","Set","stream","fsWalkStream","on","data","add","expectedPageDataFiles","forEach","deletionPromises","pageDataFilePath","has","all"],"sources":["../../src/utils/page-data.ts"],"sourcesContent":["import { walkStream as fsWalkStream, Entry } from \"@nodelib/fs.walk\"\nimport fs from \"fs-extra\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport fastq from \"fastq\"\nimport path from \"path\"\nimport { createContentDigest, generatePageDataPath } from \"gatsby-core-utils\"\nimport { websocketManager } from \"./websocket-manager\"\nimport { isWebpackStatusPending } from \"./webpack-status\"\nimport { store } from \"../redux\"\nimport type { IGatsbySlice, IGatsbyState } from \"../redux/types\"\nimport { hasFlag, FLAG_DIRTY_NEW_PAGE } from \"../redux/reducers/queries\"\nimport { isLmdbStore } from \"../datastore\"\nimport type GatsbyCacheLmdb from \"./cache-lmdb\"\nimport {\n  constructPageDataString,\n  reverseFixedPagePath,\n  IPageData,\n  IPageDataInput,\n} from \"./page-data-helpers\"\nimport { Span } from \"opentracing\"\n\nexport { reverseFixedPagePath }\nimport { processNodeManifests } from \"../utils/node-manifest\"\nimport { IExecutionResult } from \"../query/types\"\nimport { getPageMode } from \"./page-mode\"\nimport { ICollectedSlices } from \"./babel/find-slices\"\nimport { ensureFileContent } from \"./ensure-file-content\"\n\nexport interface IPageDataWithQueryResult extends IPageData {\n  result: IExecutionResult\n}\n\nexport interface ISliceData {\n  componentChunkName: string\n  result: IExecutionResult\n  staticQueryHashes: Array<string>\n}\n\nexport async function readPageData(\n  publicDir: string,\n  pagePath: string\n): Promise<IPageDataWithQueryResult> {\n  const filePath = generatePageDataPath(publicDir, pagePath)\n  const rawPageData = await fs.readFile(filePath, `utf-8`)\n  return JSON.parse(rawPageData)\n}\n\nexport async function removePageData(\n  publicDir: string,\n  pagePath: string\n): Promise<void> {\n  const filePath = generatePageDataPath(publicDir, pagePath)\n\n  if (fs.existsSync(filePath)) {\n    return await fs.remove(filePath)\n  }\n\n  return Promise.resolve()\n}\n\nexport function pageDataExists(publicDir: string, pagePath: string): boolean {\n  return fs.existsSync(generatePageDataPath(publicDir, pagePath))\n}\n\nlet lmdbPageQueryResultsCache: GatsbyCacheLmdb\nfunction getLMDBPageQueryResultsCache(): GatsbyCacheLmdb {\n  if (!lmdbPageQueryResultsCache) {\n    const GatsbyCacheLmdbImpl = require(`./cache-lmdb`).default\n    lmdbPageQueryResultsCache = new GatsbyCacheLmdbImpl({\n      name: `internal-tmp-query-results`,\n      encoding: `string`,\n    }).init()\n  }\n  return lmdbPageQueryResultsCache\n}\n\nlet savePageQueryResultsPromise = Promise.resolve()\n\nexport function waitUntilPageQueryResultsAreStored(): Promise<void> {\n  return savePageQueryResultsPromise\n}\n\nexport async function savePageQueryResult(\n  programDir: string,\n  pagePath: string,\n  stringifiedResult: string\n): Promise<void> {\n  if (isLmdbStore()) {\n    savePageQueryResultsPromise = getLMDBPageQueryResultsCache().set(\n      pagePath,\n      stringifiedResult\n    ) as Promise<void>\n  } else {\n    const pageQueryResultsPath = path.join(\n      programDir,\n      `.cache`,\n      `json`,\n      `${pagePath.replace(/\\//g, `_`)}.json`\n    )\n    await fs.outputFile(pageQueryResultsPath, stringifiedResult)\n  }\n}\n\nexport async function readPageQueryResult(\n  publicDir: string,\n  pagePath: string\n): Promise<string | Buffer> {\n  if (isLmdbStore()) {\n    const stringifiedResult = await getLMDBPageQueryResultsCache().get(pagePath)\n    if (typeof stringifiedResult === `string`) {\n      return stringifiedResult\n    }\n    throw new Error(`Couldn't find temp query result for \"${pagePath}\".`)\n  } else {\n    const pageQueryResultsPath = path.join(\n      publicDir,\n      `..`,\n      `.cache`,\n      `json`,\n      `${pagePath.replace(/\\//g, `_`)}.json`\n    )\n    return fs.readFile(pageQueryResultsPath)\n  }\n}\n\nexport async function writePageData(\n  publicDir: string,\n  pageData: IPageDataInput,\n  slicesUsedByTemplates: Map<string, ICollectedSlices>,\n  slices: IGatsbyState[\"slices\"]\n): Promise<string> {\n  const result = await readPageQueryResult(publicDir, pageData.path)\n\n  const outputFilePath = generatePageDataPath(publicDir, pageData.path)\n\n  const body = constructPageDataString(\n    pageData,\n    result,\n    slicesUsedByTemplates,\n    slices\n  )\n\n  // transform asset size to kB (from bytes) to fit 64 bit to numbers\n  const pageDataSize = Buffer.byteLength(body) / 1000\n\n  store.dispatch({\n    type: `ADD_PAGE_DATA_STATS`,\n    payload: {\n      pagePath: pageData.path,\n      filePath: outputFilePath,\n      size: pageDataSize,\n      pageDataHash: createContentDigest(body),\n    },\n  })\n\n  await ensureFileContent(outputFilePath, body)\n  return body\n}\n\nexport async function writeSliceData(\n  publicDir: string,\n  { componentChunkName, name }: IGatsbySlice,\n  staticQueryHashes: Array<string>\n): Promise<string> {\n  const result = JSON.parse(\n    (await readPageQueryResult(publicDir, `slice--${name}`)).toString()\n  )\n\n  const outputFilePath = path.join(publicDir, `slice-data`, `${name}.json`)\n\n  const sliceData: ISliceData = {\n    componentChunkName,\n    result,\n    staticQueryHashes,\n  }\n\n  const body = JSON.stringify(sliceData)\n\n  const sliceDataSize = Buffer.byteLength(body) / 1000\n\n  store.dispatch({\n    type: `ADD_SLICE_DATA_STATS`,\n    payload: {\n      sliceName: name,\n      filePath: outputFilePath,\n      size: sliceDataSize,\n      sliceDataHash: createContentDigest(body),\n    },\n  })\n\n  await ensureFileContent(outputFilePath, body)\n  return body\n}\n\nexport async function readSliceData(\n  publicDir: string,\n  sliceName: string\n): Promise<IPageDataWithQueryResult> {\n  const filePath = path.join(publicDir, `slice-data`, `${sliceName}.json`)\n  const rawPageData = await fs.readFile(filePath, `utf-8`)\n  return JSON.parse(rawPageData)\n}\n\nlet isFlushPending = false\nlet isFlushing = false\n\nexport function isFlushEnqueued(): boolean {\n  return isFlushPending\n}\n\ntype IDataTask =\n  | {\n      type: \"page\"\n      pagePath: string\n    }\n  | {\n      type: \"slice\"\n      sliceName: string\n    }\n\nexport async function flush(parentSpan?: Span): Promise<void> {\n  if (isFlushing) {\n    // We're already in the middle of a flush\n    return\n  }\n  await waitUntilPageQueryResultsAreStored()\n  isFlushPending = false\n  isFlushing = true\n  const {\n    pendingPageDataWrites,\n    pages,\n    program,\n    staticQueriesByTemplate,\n    queries,\n    slices,\n    slicesByTemplate,\n  } = store.getState()\n  const isBuild = program?._?.[0] !== `develop`\n\n  const { pagePaths, sliceNames } = pendingPageDataWrites\n  let writePageDataActivity\n\n  let nodeManifestPagePathMap\n\n  if (pagePaths.size > 0) {\n    // we process node manifests in this location because we need to add the manifestId to the page data.\n    // We use this manifestId to determine if the page data is up to date when routing. Here we create a map of \"pagePath\": \"manifestId\" while processing and writing node manifest files.\n    // We only do this when there are pending page-data writes because otherwise we could flush pending createNodeManifest calls before page-data.json files are written. Which means those page-data files wouldn't have the corresponding manifest id's written to them.\n    nodeManifestPagePathMap = await processNodeManifests()\n  }\n\n  if (pagePaths.size > 0 || sliceNames.size > 0) {\n    writePageDataActivity = reporter.createProgress(\n      `Writing page-data.json and slice-data.json files to public directory`,\n      pagePaths.size + sliceNames.size,\n      0,\n      { id: `write-page-data-public-directory`, parentSpan }\n    )\n    writePageDataActivity.start()\n  }\n\n  const flushQueue = fastq<void, IDataTask, boolean>(async (task, cb) => {\n    if (task.type === `page`) {\n      const { pagePath } = task\n      const page = pages.get(pagePath)\n\n      let shouldClearPendingWrite = true\n\n      // It's a gloomy day in Bombay, let me tell you a short story...\n      // Once upon a time, writing page-data.json files were atomic\n      // After this change (#24808), they are not and this means that\n      // between adding a pending write for a page and actually flushing\n      // them, a page might not exist anymore щ（ﾟДﾟщ）\n      // This is why we need this check\n      if (page) {\n        if (page.path && nodeManifestPagePathMap) {\n          page.manifestId = nodeManifestPagePathMap.get(page.path)\n        }\n\n        if (!isBuild && process.env.GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND) {\n          // check if already did run query for this page\n          // with query-on-demand we might have pending page-data write due to\n          // changes in static queries assigned to page template, but we might not\n          // have query result for it\n          const query = queries.trackedQueries.get(page.path)\n          if (!query) {\n            // this should not happen ever\n            throw new Error(\n              `We have a page, but we don't have registered query for it (???)`\n            )\n          }\n\n          if (hasFlag(query.dirty, FLAG_DIRTY_NEW_PAGE)) {\n            // query results are not written yet\n            setImmediate(() => cb(null, true))\n            return\n          }\n        }\n\n        // In develop we rely on QUERY_ON_DEMAND so we just go through\n        // In build we only build these page-json for SSG pages\n        if (!isBuild || (isBuild && getPageMode(page) === `SSG`)) {\n          const staticQueryHashes =\n            staticQueriesByTemplate.get(page.componentPath) || []\n\n          try {\n            const result = await writePageData(\n              path.join(program.directory, `public`),\n              {\n                ...page,\n                staticQueryHashes,\n              },\n              slicesByTemplate,\n              slices\n            )\n\n            if (!isBuild) {\n              websocketManager.emitPageData({\n                id: pagePath,\n                result: JSON.parse(result) as IPageDataWithQueryResult,\n              })\n            }\n          } catch (e) {\n            shouldClearPendingWrite = false\n            reporter.panicOnBuild(\n              `Failed to write page-data for \"\"${page.path}`,\n              e\n            )\n          }\n          writePageDataActivity.tick()\n        }\n      }\n\n      if (shouldClearPendingWrite) {\n        store.dispatch({\n          type: `CLEAR_PENDING_PAGE_DATA_WRITE`,\n          payload: {\n            page: pagePath,\n          },\n        })\n      }\n    } else if (task.type === `slice`) {\n      const { sliceName } = task\n      const slice = slices.get(sliceName)\n      if (slice) {\n        const staticQueryHashes =\n          staticQueriesByTemplate.get(slice.componentPath) || []\n\n        const result = await writeSliceData(\n          path.join(program.directory, `public`),\n          slice,\n          staticQueryHashes\n        )\n\n        writePageDataActivity.tick()\n\n        if (!isBuild) {\n          websocketManager.emitSliceData({\n            id: sliceName,\n            result: JSON.parse(result) as IPageDataWithQueryResult,\n          })\n        }\n      }\n\n      store.dispatch({\n        type: `CLEAR_PENDING_SLICE_DATA_WRITE`,\n        payload: {\n          name: sliceName,\n        },\n      })\n    }\n\n    // `setImmediate` below is a workaround against stack overflow\n    // occurring when there are many non-SSG pages\n    setImmediate(() => cb(null, true))\n    return\n  }, 25)\n\n  for (const pagePath of pagePaths) {\n    flushQueue.push({ type: `page`, pagePath }, () => {})\n  }\n  for (const sliceName of sliceNames) {\n    flushQueue.push({ type: `slice`, sliceName }, () => {})\n  }\n\n  if (!flushQueue.idle()) {\n    await new Promise(resolve => {\n      flushQueue.drain = resolve as () => unknown\n    })\n  }\n  if (writePageDataActivity) {\n    writePageDataActivity.end()\n  }\n\n  isFlushing = false\n\n  return\n}\n\nexport function enqueueFlush(parentSpan?: Span): void {\n  if (isWebpackStatusPending()) {\n    isFlushPending = true\n  } else {\n    flush(parentSpan)\n  }\n}\n\nexport async function handleStalePageData(parentSpan: Span): Promise<void> {\n  if (!(await fs.pathExists(`public/page-data`))) {\n    return\n  }\n\n  // public directory might have stale page-data files from previous builds\n  // we get the list of those and compare against expected page-data files\n  // and remove ones that shouldn't be there anymore\n\n  const activity = reporter.activityTimer(`Cleaning up stale page-data`, {\n    parentSpan,\n  })\n  activity.start()\n\n  const pageDataFilesFromPreviousBuilds = await new Promise<Set<string>>(\n    (resolve, reject) => {\n      const results = new Set<string>()\n\n      const stream = fsWalkStream(`public/page-data`)\n\n      stream.on(`data`, (data: Entry) => {\n        if (data.name === `page-data.json`) {\n          results.add(data.path)\n        }\n      })\n\n      stream.on(`error`, e => {\n        reject(e)\n      })\n\n      stream.on(`end`, () => resolve(results))\n    }\n  )\n\n  const expectedPageDataFiles = new Set<string>()\n  store.getState().pages.forEach(page => {\n    expectedPageDataFiles.add(generatePageDataPath(`public`, page.path))\n  })\n\n  const deletionPromises: Array<Promise<void>> = []\n  pageDataFilesFromPreviousBuilds.forEach(pageDataFilePath => {\n    if (!expectedPageDataFiles.has(pageDataFilePath)) {\n      deletionPromises.push(fs.remove(pageDataFilePath))\n    }\n  })\n\n  await Promise.all(deletionPromises)\n\n  activity.end()\n}\n"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/gatsby/dist/utils/page-ssr-module/bundle-webpack.js b/node_modules/gatsby/dist/utils/page-ssr-module/bundle-webpack.js
index 93ad863..e7c930c 100644
--- a/node_modules/gatsby/dist/utils/page-ssr-module/bundle-webpack.js
+++ b/node_modules/gatsby/dist/utils/page-ssr-module/bundle-webpack.js
@@ -163,7 +163,9 @@ async function createPageSSRBundle({
       GATSBY_SLICES_BY_TEMPLATE: JSON.stringify(slicesByTemplateStateObject),
       GATSBY_SLICES_SCRIPT: JSON.stringify("5" === `5` && process.env.GATSBY_SLICES ? fs.readFileSync(path.join(rootDir, `public`, `_gatsby`, `slices`, `_gatsby-scripts-1.html`), `utf-8`) : ``),
       // eslint-disable-next-line @typescript-eslint/naming-convention
-      "process.env.GATSBY_LOGGER": JSON.stringify(`yurnalist`)
+      "process.env.GATSBY_LOGGER": JSON.stringify(`yurnalist`),
+      // eslint-disable-next-line @typescript-eslint/naming-convention
+      "process.env.GATSBY_SLICES": JSON.stringify(!!process.env.GATSBY_SLICES)
     }), (_process$env$GATSBY_W = process.env.GATSBY_WEBPACK_LOGGING) !== null && _process$env$GATSBY_W !== void 0 && _process$env$GATSBY_W.includes(`page-engine`) ? new _webpackLogging.WebpackLoggingPlugin(rootDir, reporter, isVerbose) : false].filter(Boolean)
   });
   return new Promise((resolve, reject) => {
diff --git a/node_modules/gatsby/dist/utils/page-ssr-module/bundle-webpack.js.map b/node_modules/gatsby/dist/utils/page-ssr-module/bundle-webpack.js.map
index 7915d08..b8e0854 100644
--- a/node_modules/gatsby/dist/utils/page-ssr-module/bundle-webpack.js.map
+++ b/node_modules/gatsby/dist/utils/page-ssr-module/bundle-webpack.js.map
@@ -1 +1 @@
-{"version":3,"file":"bundle-webpack.js","names":["extensions","outputDir","path","join","process","cwd","cacheLocation","writeQueryContext","staticQueriesByTemplate","components","waitingForWrites","pageTemplate","values","staticQueryHashes","get","componentPath","push","writeStaticQueryContext","componentChunkName","Promise","all","then","createPageSSRBundle","rootDir","webpackCompilationHash","reporter","isVerbose","state","store","getState","slicesStateObject","key","value","slices","slicesByTemplateStateObject","template","records","slicesByTemplate","recordsObject","Object","keys","webpackStats","readWebpackStats","toInline","query","assets","getScriptsAndStylesForTemplate","compiler","webpack","name","mode","entry","__dirname","output","filename","libraryTarget","target","externalsPresets","node","cache","type","buildDependencies","config","__filename","externals","mod","builtinModules","reduce","acc","builtinModule","devtool","module","rules","test","resolve","byDependency","esm","fullySpecified","parser","amd","use","loader","require","options","outputAssetBase","alias","inquirer","plugins","DefinePlugin","INLINED_TEMPLATE_TO_DETAILS","JSON","stringify","WEBPACK_COMPILATION_HASH","GATSBY_SLICES","GATSBY_SLICES_BY_TEMPLATE","GATSBY_SLICES_SCRIPT","env","fs","readFileSync","GATSBY_WEBPACK_LOGGING","includes","WebpackLoggingPlugin","filter","Boolean","reject","run","err","stats","close","closeErr","compilation"],"sources":["../../../src/utils/page-ssr-module/bundle-webpack.ts"],"sourcesContent":["import * as path from \"path\"\nimport * as fs from \"fs-extra\"\nimport webpack from \"webpack\"\nimport mod from \"module\"\nimport { WebpackLoggingPlugin } from \"../../utils/webpack/plugins/webpack-logging\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport type { ITemplateDetails } from \"./entry\"\n\nimport {\n  getScriptsAndStylesForTemplate,\n  readWebpackStats,\n} from \"../client-assets-for-template\"\nimport { writeStaticQueryContext } from \"../static-query-utils\"\nimport { IGatsbyState } from \"../../redux/types\"\nimport { store } from \"../../redux\"\n\ntype Reporter = typeof reporter\n\nconst extensions = [`.mjs`, `.js`, `.json`, `.node`, `.ts`, `.tsx`]\nconst outputDir = path.join(process.cwd(), `.cache`, `page-ssr`)\nconst cacheLocation = path.join(process.cwd(), `.cache`, `webpack`, `page-ssr`)\n\nexport async function writeQueryContext({\n  staticQueriesByTemplate,\n  components,\n}: {\n  staticQueriesByTemplate: IGatsbyState[\"staticQueriesByTemplate\"]\n  components: IGatsbyState[\"components\"]\n}): Promise<void> {\n  const waitingForWrites: Array<Promise<unknown>> = []\n  for (const pageTemplate of components.values()) {\n    const staticQueryHashes =\n      staticQueriesByTemplate.get(pageTemplate.componentPath) || []\n\n    waitingForWrites.push(\n      writeStaticQueryContext(\n        staticQueryHashes,\n        pageTemplate.componentChunkName\n      )\n    )\n  }\n\n  return Promise.all(waitingForWrites).then(() => {})\n}\n\nexport async function createPageSSRBundle({\n  rootDir,\n  components,\n  staticQueriesByTemplate,\n  webpackCompilationHash,\n  reporter,\n  isVerbose = false,\n}: {\n  rootDir: string\n  components: IGatsbyState[\"components\"]\n  staticQueriesByTemplate: IGatsbyState[\"staticQueriesByTemplate\"]\n  webpackCompilationHash: IGatsbyState[\"webpackCompilationHash\"]\n  reporter: Reporter\n  isVerbose?: boolean\n}): Promise<webpack.Compilation | undefined> {\n  const state = store.getState()\n  const slicesStateObject = {}\n  for (const [key, value] of state.slices) {\n    slicesStateObject[key] = value\n  }\n\n  const slicesByTemplateStateObject = {}\n  for (const [template, records] of state.slicesByTemplate) {\n    const recordsObject = {}\n    for (const path of Object.keys(records)) {\n      recordsObject[path] = records[path]\n    }\n\n    slicesByTemplateStateObject[template] = recordsObject\n  }\n\n  const webpackStats = await readWebpackStats(path.join(rootDir, `public`))\n\n  const toInline: Record<string, ITemplateDetails> = {}\n  for (const pageTemplate of components.values()) {\n    const staticQueryHashes =\n      staticQueriesByTemplate.get(pageTemplate.componentPath) || []\n\n    toInline[pageTemplate.componentChunkName] = {\n      query: pageTemplate.query,\n      staticQueryHashes,\n      assets: await getScriptsAndStylesForTemplate(\n        pageTemplate.componentChunkName,\n        webpackStats\n      ),\n    }\n  }\n\n  const compiler = webpack({\n    name: `Page Engine`,\n    mode: `none`,\n    entry: path.join(__dirname, `entry.js`),\n    output: {\n      path: outputDir,\n      filename: `index.js`,\n      libraryTarget: `commonjs`,\n    },\n    target: `node`,\n    externalsPresets: {\n      node: false,\n    },\n    cache: {\n      type: `filesystem`,\n      name: `page-ssr`,\n      cacheLocation,\n      buildDependencies: {\n        config: [__filename],\n      },\n    },\n    // those are required in some runtime paths, but we don't need them\n    externals: [\n      /^\\.\\/routes/,\n      `electron`, // :shrug: `got` seems to have electron specific code path\n      mod.builtinModules.reduce((acc, builtinModule) => {\n        if (builtinModule === `fs`) {\n          acc[builtinModule] = `global _actualFsWrapper`\n        } else {\n          acc[builtinModule] = `commonjs ${builtinModule}`\n        }\n\n        return acc\n      }, {}),\n    ],\n    devtool: false,\n    module: {\n      rules: [\n        {\n          test: /\\.m?js$/,\n          type: `javascript/auto`,\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n        },\n        {\n          // For node binary relocations, include \".node\" files as well here\n          test: /\\.(m?js|node)$/,\n          // it is recommended for Node builds to turn off AMD support\n          parser: { amd: false },\n          use: {\n            loader: require.resolve(`@vercel/webpack-asset-relocator-loader`),\n            options: {\n              outputAssetBase: `assets`,\n            },\n          },\n        },\n        {\n          test: /\\.txt/,\n          type: `asset/resource`,\n        },\n      ],\n    },\n    resolve: {\n      extensions,\n      alias: {\n        \".cache\": `${rootDir}/.cache/`,\n        [require.resolve(`gatsby-cli/lib/reporter/loggers/ink/index.js`)]:\n          false,\n        inquirer: false,\n      },\n    },\n    plugins: [\n      new webpack.DefinePlugin({\n        INLINED_TEMPLATE_TO_DETAILS: JSON.stringify(toInline),\n        WEBPACK_COMPILATION_HASH: JSON.stringify(webpackCompilationHash),\n        GATSBY_SLICES: JSON.stringify(slicesStateObject),\n        GATSBY_SLICES_BY_TEMPLATE: JSON.stringify(slicesByTemplateStateObject),\n        GATSBY_SLICES_SCRIPT: JSON.stringify(\n          _CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES\n            ? fs.readFileSync(\n                path.join(\n                  rootDir,\n                  `public`,\n                  `_gatsby`,\n                  `slices`,\n                  `_gatsby-scripts-1.html`\n                ),\n                `utf-8`\n              )\n            : ``\n        ),\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n      }),\n      process.env.GATSBY_WEBPACK_LOGGING?.includes(`page-engine`)\n        ? new WebpackLoggingPlugin(rootDir, reporter, isVerbose)\n        : false,\n    ].filter(Boolean) as Array<webpack.WebpackPluginInstance>,\n  })\n\n  return new Promise((resolve, reject) => {\n    compiler.run((err, stats) => {\n      compiler.close(closeErr => {\n        if (err) {\n          return reject(err)\n        }\n        if (closeErr) {\n          return reject(closeErr)\n        }\n        return resolve(stats?.compilation)\n      })\n    })\n  })\n}\n"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"bundle-webpack.js","names":["extensions","outputDir","path","join","process","cwd","cacheLocation","writeQueryContext","staticQueriesByTemplate","components","waitingForWrites","pageTemplate","values","staticQueryHashes","get","componentPath","push","writeStaticQueryContext","componentChunkName","Promise","all","then","createPageSSRBundle","rootDir","webpackCompilationHash","reporter","isVerbose","state","store","getState","slicesStateObject","key","value","slices","slicesByTemplateStateObject","template","records","slicesByTemplate","recordsObject","Object","keys","webpackStats","readWebpackStats","toInline","query","assets","getScriptsAndStylesForTemplate","compiler","webpack","name","mode","entry","__dirname","output","filename","libraryTarget","target","externalsPresets","node","cache","type","buildDependencies","config","__filename","externals","mod","builtinModules","reduce","acc","builtinModule","devtool","module","rules","test","resolve","byDependency","esm","fullySpecified","parser","amd","use","loader","require","options","outputAssetBase","alias","inquirer","plugins","DefinePlugin","INLINED_TEMPLATE_TO_DETAILS","JSON","stringify","WEBPACK_COMPILATION_HASH","GATSBY_SLICES","GATSBY_SLICES_BY_TEMPLATE","GATSBY_SLICES_SCRIPT","env","fs","readFileSync","GATSBY_WEBPACK_LOGGING","includes","WebpackLoggingPlugin","filter","Boolean","reject","run","err","stats","close","closeErr","compilation"],"sources":["../../../src/utils/page-ssr-module/bundle-webpack.ts"],"sourcesContent":["import * as path from \"path\"\nimport * as fs from \"fs-extra\"\nimport webpack from \"webpack\"\nimport mod from \"module\"\nimport { WebpackLoggingPlugin } from \"../../utils/webpack/plugins/webpack-logging\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport type { ITemplateDetails } from \"./entry\"\n\nimport {\n  getScriptsAndStylesForTemplate,\n  readWebpackStats,\n} from \"../client-assets-for-template\"\nimport { writeStaticQueryContext } from \"../static-query-utils\"\nimport { IGatsbyState } from \"../../redux/types\"\nimport { store } from \"../../redux\"\n\ntype Reporter = typeof reporter\n\nconst extensions = [`.mjs`, `.js`, `.json`, `.node`, `.ts`, `.tsx`]\nconst outputDir = path.join(process.cwd(), `.cache`, `page-ssr`)\nconst cacheLocation = path.join(process.cwd(), `.cache`, `webpack`, `page-ssr`)\n\nexport async function writeQueryContext({\n  staticQueriesByTemplate,\n  components,\n}: {\n  staticQueriesByTemplate: IGatsbyState[\"staticQueriesByTemplate\"]\n  components: IGatsbyState[\"components\"]\n}): Promise<void> {\n  const waitingForWrites: Array<Promise<unknown>> = []\n  for (const pageTemplate of components.values()) {\n    const staticQueryHashes =\n      staticQueriesByTemplate.get(pageTemplate.componentPath) || []\n\n    waitingForWrites.push(\n      writeStaticQueryContext(\n        staticQueryHashes,\n        pageTemplate.componentChunkName\n      )\n    )\n  }\n\n  return Promise.all(waitingForWrites).then(() => {})\n}\n\nexport async function createPageSSRBundle({\n  rootDir,\n  components,\n  staticQueriesByTemplate,\n  webpackCompilationHash,\n  reporter,\n  isVerbose = false,\n}: {\n  rootDir: string\n  components: IGatsbyState[\"components\"]\n  staticQueriesByTemplate: IGatsbyState[\"staticQueriesByTemplate\"]\n  webpackCompilationHash: IGatsbyState[\"webpackCompilationHash\"]\n  reporter: Reporter\n  isVerbose?: boolean\n}): Promise<webpack.Compilation | undefined> {\n  const state = store.getState()\n  const slicesStateObject = {}\n  for (const [key, value] of state.slices) {\n    slicesStateObject[key] = value\n  }\n\n  const slicesByTemplateStateObject = {}\n  for (const [template, records] of state.slicesByTemplate) {\n    const recordsObject = {}\n    for (const path of Object.keys(records)) {\n      recordsObject[path] = records[path]\n    }\n\n    slicesByTemplateStateObject[template] = recordsObject\n  }\n\n  const webpackStats = await readWebpackStats(path.join(rootDir, `public`))\n\n  const toInline: Record<string, ITemplateDetails> = {}\n  for (const pageTemplate of components.values()) {\n    const staticQueryHashes =\n      staticQueriesByTemplate.get(pageTemplate.componentPath) || []\n\n    toInline[pageTemplate.componentChunkName] = {\n      query: pageTemplate.query,\n      staticQueryHashes,\n      assets: await getScriptsAndStylesForTemplate(\n        pageTemplate.componentChunkName,\n        webpackStats\n      ),\n    }\n  }\n\n  const compiler = webpack({\n    name: `Page Engine`,\n    mode: `none`,\n    entry: path.join(__dirname, `entry.js`),\n    output: {\n      path: outputDir,\n      filename: `index.js`,\n      libraryTarget: `commonjs`,\n    },\n    target: `node`,\n    externalsPresets: {\n      node: false,\n    },\n    cache: {\n      type: `filesystem`,\n      name: `page-ssr`,\n      cacheLocation,\n      buildDependencies: {\n        config: [__filename],\n      },\n    },\n    // those are required in some runtime paths, but we don't need them\n    externals: [\n      /^\\.\\/routes/,\n      `electron`, // :shrug: `got` seems to have electron specific code path\n      mod.builtinModules.reduce((acc, builtinModule) => {\n        if (builtinModule === `fs`) {\n          acc[builtinModule] = `global _actualFsWrapper`\n        } else {\n          acc[builtinModule] = `commonjs ${builtinModule}`\n        }\n\n        return acc\n      }, {}),\n    ],\n    devtool: false,\n    module: {\n      rules: [\n        {\n          test: /\\.m?js$/,\n          type: `javascript/auto`,\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n        },\n        {\n          // For node binary relocations, include \".node\" files as well here\n          test: /\\.(m?js|node)$/,\n          // it is recommended for Node builds to turn off AMD support\n          parser: { amd: false },\n          use: {\n            loader: require.resolve(`@vercel/webpack-asset-relocator-loader`),\n            options: {\n              outputAssetBase: `assets`,\n            },\n          },\n        },\n        {\n          test: /\\.txt/,\n          type: `asset/resource`,\n        },\n      ],\n    },\n    resolve: {\n      extensions,\n      alias: {\n        \".cache\": `${rootDir}/.cache/`,\n        [require.resolve(`gatsby-cli/lib/reporter/loggers/ink/index.js`)]:\n          false,\n        inquirer: false,\n      },\n    },\n    plugins: [\n      new webpack.DefinePlugin({\n        INLINED_TEMPLATE_TO_DETAILS: JSON.stringify(toInline),\n        WEBPACK_COMPILATION_HASH: JSON.stringify(webpackCompilationHash),\n        GATSBY_SLICES: JSON.stringify(slicesStateObject),\n        GATSBY_SLICES_BY_TEMPLATE: JSON.stringify(slicesByTemplateStateObject),\n        GATSBY_SLICES_SCRIPT: JSON.stringify(\n          _CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES\n            ? fs.readFileSync(\n                path.join(\n                  rootDir,\n                  `public`,\n                  `_gatsby`,\n                  `slices`,\n                  `_gatsby-scripts-1.html`\n                ),\n                `utf-8`\n              )\n            : ``\n        ),\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        \"process.env.GATSBY_SLICES\": JSON.stringify(\n          !!process.env.GATSBY_SLICES\n        ),\n      }),\n      process.env.GATSBY_WEBPACK_LOGGING?.includes(`page-engine`)\n        ? new WebpackLoggingPlugin(rootDir, reporter, isVerbose)\n        : false,\n    ].filter(Boolean) as Array<webpack.WebpackPluginInstance>,\n  })\n\n  return new Promise((resolve, reject) => {\n    compiler.run((err, stats) => {\n      compiler.close(closeErr => {\n        if (err) {\n          return reject(err)\n        }\n        if (closeErr) {\n          return reject(closeErr)\n        }\n        return resolve(stats?.compilation)\n      })\n    })\n  })\n}\n"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/gatsby/dist/utils/page-ssr-module/entry.js b/node_modules/gatsby/dist/utils/page-ssr-module/entry.js
index 9350efd..a4b4c86 100644
--- a/node_modules/gatsby/dist/utils/page-ssr-module/entry.js
+++ b/node_modules/gatsby/dist/utils/page-ssr-module/entry.js
@@ -276,6 +276,29 @@ async function renderHTML({
       });
     }
 
+    const sliceData = {};
+
+    if ("5" === `5` && process.env.GATSBY_SLICES) {
+      let readSliceDataActivity;
+
+      try {
+        if (wrapperActivity) {
+          readSliceDataActivity = _reporter.default.phantomActivity(`Preparing slice-data`, {
+            parentSpan: wrapperActivity.span
+          });
+          readSliceDataActivity.start();
+        }
+
+        for (const sliceName of Object.values(pageData.slicesMap)) {
+          sliceData[sliceName] = await readSliceData(sliceName);
+        }
+      } finally {
+        if (readSliceDataActivity) {
+          readSliceDataActivity.end();
+        }
+      }
+    }
+
     let readStaticQueryContextActivity;
     let staticQueryContext;
 
@@ -287,21 +310,22 @@ async function renderHTML({
         readStaticQueryContextActivity.start();
       }
 
-      staticQueryContext = await readStaticQueryContext(data.page.componentChunkName);
+      const uniqueUsedComponentChunkNames = [data.page.componentChunkName];
+
+      for (const singleSliceData of Object.values(sliceData)) {
+        if (singleSliceData.componentChunkName && !uniqueUsedComponentChunkNames.includes(singleSliceData.componentChunkName)) {
+          uniqueUsedComponentChunkNames.push(singleSliceData.componentChunkName);
+        }
+      }
+
+      const contextsToMerge = await Promise.all(uniqueUsedComponentChunkNames.map(readStaticQueryContext));
+      staticQueryContext = Object.assign({}, ...contextsToMerge);
     } finally {
       if (readStaticQueryContextActivity) {
         readStaticQueryContextActivity.end();
       }
     }
 
-    const sliceData = {};
-
-    if ("5" === `5` && process.env.GATSBY_SLICES) {
-      for (const sliceName of Object.values(pageData.slicesMap)) {
-        sliceData[sliceName] = await readSliceData(sliceName);
-      }
-    }
-
     let renderHTMLActivity;
 
     try {
diff --git a/node_modules/gatsby/dist/utils/page-ssr-module/entry.js.map b/node_modules/gatsby/dist/utils/page-ssr-module/entry.js.map
index 9d2c63a..caaae29 100644
--- a/node_modules/gatsby/dist/utils/page-ssr-module/entry.js.map
+++ b/node_modules/gatsby/dist/utils/page-ssr-module/entry.js.map
@@ -1 +1 @@
-{"version":3,"file":"entry.js","names":["tracerReadyPromise","initTracer","process","env","GATSBY_OPEN_TRACING_CONFIG_FILE","getData","pathName","graphqlEngine","req","spanContext","telemetryResolverTimings","getDataWrapperActivity","reporter","phantomActivity","parentSpan","start","page","templateDetails","potentialPagePath","findMetaActivity","span","getPagePathFromPageDataPath","maybePage","findPageByPath","Error","INLINED_TEMPLATE_TO_DETAILS","componentChunkName","end","executionPromises","results","serverData","query","runningQueryActivity","push","runQuery","context","queryName","path","componentPath","forceGraphqlTracing","then","queryResults","errors","length","e","codeFrame","getCodeFrame","locations","line","column","queryRunningError","message","stack","finally","mode","runningGetServerDataActivity","getPageChunk","mod","getServerData","serverDataResults","Promise","all","props","pageContext","searchString","maybeQueryString","Object","entries","map","k","v","encodeURIComponent","join","serverDataHeaders","headers","serverDataStatus","status","getPath","data","matchPath","renderPageData","activity","sliceOverrides","slices","slicesFromBundler","GATSBY_SLICES","Map","key","value","set","slicesUsedByTemplatesFromBundler","GATSBY_SLICES_BY_TEMPLATE","slicesUsedByTemplates","constructPageDataString","staticQueryHashes","JSON","stringify","parse","readStaticQueryContext","templatePath","filePath","__dirname","rawSQContext","fs","readFile","readSliceData","sliceName","rawSliceData","renderHTML","pageData","wrapperActivity","readStaticQueryContextActivity","staticQueryContext","sliceData","values","slicesMap","renderHTMLActivity","pagePath","htmlComponentRenderer","webpackCompilationHash","WEBPACK_COMPILATION_HASH","assets","inlinePageData","html","replace","GATSBY_SLICES_SCRIPT"],"sources":["../../../src/utils/page-ssr-module/entry.ts"],"sourcesContent":["// \"engines-fs-provider\" must be first import, as it sets up global\n// fs and this need to happen before anything else tries to import fs\nimport \"../engines-fs-provider\"\n\n// just types - those should not be bundled\nimport type { GraphQLEngine } from \"../../schema/graphql-engine/entry\"\nimport type { IExecutionResult } from \"../../query/types\"\nimport type { IGatsbyPage, IGatsbySlice, IGatsbyState } from \"../../redux/types\"\nimport { IGraphQLTelemetryRecord } from \"../../schema/type-definitions\"\nimport type { IScriptsAndStyles } from \"../client-assets-for-template\"\nimport type { IPageDataWithQueryResult } from \"../page-data\"\nimport type { Request } from \"express\"\nimport type { Span, SpanContext } from \"opentracing\"\n\n// actual imports\nimport * as path from \"path\"\nimport * as fs from \"fs-extra\"\nimport {\n  constructPageDataString,\n  getPagePathFromPageDataPath,\n} from \"../page-data-helpers\"\n// @ts-ignore render-page import will become valid later on (it's marked as external)\nimport htmlComponentRenderer, { getPageChunk } from \"./routes/render-page\"\nimport { getServerData, IServerData } from \"../get-server-data\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { initTracer } from \"../tracer\"\nimport { getCodeFrame } from \"../../query/graphql-errors-codeframe\"\nimport { ICollectedSlice } from \"../babel/find-slices\"\n\nexport interface ITemplateDetails {\n  query: string\n  staticQueryHashes: Array<string>\n  assets: IScriptsAndStyles\n}\nexport interface ISSRData {\n  results: IExecutionResult\n  page: IGatsbyPage\n  templateDetails: ITemplateDetails\n  potentialPagePath: string\n  serverDataHeaders?: Record<string, string>\n  serverDataStatus?: number\n  searchString: string\n}\n\n// just letting TypeScript know about injected data\n// with DefinePlugin\ndeclare global {\n  const INLINED_TEMPLATE_TO_DETAILS: Record<string, ITemplateDetails>\n  const WEBPACK_COMPILATION_HASH: string\n  const GATSBY_SLICES_SCRIPT: string\n}\n\nconst tracerReadyPromise = initTracer(\n  process.env.GATSBY_OPEN_TRACING_CONFIG_FILE ?? ``\n)\n\ntype MaybePhantomActivity =\n  | ReturnType<typeof reporter.phantomActivity>\n  | undefined\n\nexport async function getData({\n  pathName,\n  graphqlEngine,\n  req,\n  spanContext,\n  telemetryResolverTimings,\n}: {\n  graphqlEngine: GraphQLEngine\n  pathName: string\n  req?: Partial<Pick<Request, \"query\" | \"method\" | \"url\" | \"headers\">>\n  spanContext?: Span | SpanContext\n  telemetryResolverTimings?: Array<IGraphQLTelemetryRecord>\n}): Promise<ISSRData> {\n  await tracerReadyPromise\n\n  let getDataWrapperActivity: MaybePhantomActivity\n  try {\n    if (spanContext) {\n      getDataWrapperActivity = reporter.phantomActivity(`Running getData`, {\n        parentSpan: spanContext,\n      })\n      getDataWrapperActivity.start()\n    }\n\n    let page: IGatsbyPage\n    let templateDetails: ITemplateDetails\n    let potentialPagePath: string\n    let findMetaActivity: MaybePhantomActivity\n    try {\n      if (getDataWrapperActivity) {\n        findMetaActivity = reporter.phantomActivity(\n          `Finding details about page and template`,\n          {\n            parentSpan: getDataWrapperActivity.span,\n          }\n        )\n        findMetaActivity.start()\n      }\n      potentialPagePath = getPagePathFromPageDataPath(pathName) || pathName\n\n      // 1. Find a page for pathname\n      const maybePage = graphqlEngine.findPageByPath(potentialPagePath)\n\n      if (!maybePage) {\n        // page not found, nothing to run query for\n        throw new Error(`Page for \"${pathName}\" not found`)\n      }\n\n      page = maybePage\n\n      // 2. Lookup query used for a page (template)\n      templateDetails = INLINED_TEMPLATE_TO_DETAILS[page.componentChunkName]\n      if (!templateDetails) {\n        throw new Error(\n          `Page template details for \"${page.componentChunkName}\" not found`\n        )\n      }\n    } finally {\n      if (findMetaActivity) {\n        findMetaActivity.end()\n      }\n    }\n\n    const executionPromises: Array<Promise<any>> = []\n\n    // 3. Execute query\n    // query-runner handles case when query is not there - so maybe we should consider using that somehow\n    let results: IExecutionResult = {}\n    let serverData: IServerData | undefined\n    if (templateDetails.query) {\n      let runningQueryActivity: MaybePhantomActivity\n      if (getDataWrapperActivity) {\n        runningQueryActivity = reporter.phantomActivity(`Running page query`, {\n          parentSpan: getDataWrapperActivity.span,\n        })\n        runningQueryActivity.start()\n      }\n      executionPromises.push(\n        graphqlEngine\n          .runQuery(\n            templateDetails.query,\n            {\n              ...page,\n              ...page.context,\n            },\n            {\n              queryName: page.path,\n              componentPath: page.componentPath,\n              parentSpan: runningQueryActivity?.span,\n              forceGraphqlTracing: !!runningQueryActivity,\n              telemetryResolverTimings,\n            }\n          )\n          .then(queryResults => {\n            if (queryResults.errors && queryResults.errors.length > 0) {\n              const e = queryResults.errors[0]\n              const codeFrame = getCodeFrame(\n                templateDetails.query,\n                e.locations && e.locations[0].line,\n                e.locations && e.locations[0].column\n              )\n\n              const queryRunningError = new Error(\n                e.message + `\\n\\n` + codeFrame\n              )\n              queryRunningError.stack = e.stack\n              throw queryRunningError\n            } else {\n              results = queryResults\n            }\n          })\n          .finally(() => {\n            if (runningQueryActivity) {\n              runningQueryActivity.end()\n            }\n          })\n      )\n    }\n\n    // 4. (if SSR) run getServerData\n    if (page.mode === `SSR`) {\n      let runningGetServerDataActivity: MaybePhantomActivity\n      if (getDataWrapperActivity) {\n        runningGetServerDataActivity = reporter.phantomActivity(\n          `Running getServerData`,\n          {\n            parentSpan: getDataWrapperActivity.span,\n          }\n        )\n        runningGetServerDataActivity.start()\n      }\n      executionPromises.push(\n        getPageChunk(page)\n          .then(mod => getServerData(req, page, potentialPagePath, mod))\n          .then(serverDataResults => {\n            serverData = serverDataResults\n          })\n          .finally(() => {\n            if (runningGetServerDataActivity) {\n              runningGetServerDataActivity.end()\n            }\n          })\n      )\n    }\n\n    await Promise.all(executionPromises)\n\n    if (serverData) {\n      results.serverData = serverData.props\n    }\n    results.pageContext = page.context\n\n    let searchString = ``\n\n    if (req?.query) {\n      const maybeQueryString = Object.entries(req.query)\n        .map(\n          ([k, v]) =>\n            // Preserve QueryString encoding\n            `${encodeURIComponent(k)}=${encodeURIComponent(v as string)}`\n        )\n        .join(`&`)\n      if (maybeQueryString) {\n        searchString = `?${maybeQueryString}`\n      }\n    }\n\n    return {\n      results,\n      page,\n      templateDetails,\n      potentialPagePath,\n      serverDataHeaders: serverData?.headers,\n      serverDataStatus: serverData?.status,\n      searchString,\n    }\n  } finally {\n    if (getDataWrapperActivity) {\n      getDataWrapperActivity.end()\n    }\n  }\n}\n\nfunction getPath(data: ISSRData): string {\n  return (\n    (data.page.mode !== `SSG` && data.page.matchPath\n      ? data.potentialPagePath\n      : data.page.path) + (data.page.mode === `SSR` ? data.searchString : ``)\n  )\n}\n\nexport async function renderPageData({\n  data,\n  spanContext,\n}: {\n  data: ISSRData\n  spanContext?: Span | SpanContext\n}): Promise<IPageDataWithQueryResult> {\n  await tracerReadyPromise\n\n  let activity: MaybePhantomActivity\n  try {\n    if (spanContext) {\n      activity = reporter.phantomActivity(`Rendering page-data`, {\n        parentSpan: spanContext,\n      })\n      activity.start()\n    }\n\n    const componentPath = data.page.componentPath\n    const sliceOverrides = data.page.slices\n\n    // @ts-ignore GATSBY_SLICES is being \"inlined\" by bundler\n    const slicesFromBundler = GATSBY_SLICES as {\n      [key: string]: IGatsbySlice\n    }\n    const slices: IGatsbyState[\"slices\"] = new Map()\n    for (const [key, value] of Object.entries(slicesFromBundler)) {\n      slices.set(key, value)\n    }\n\n    const slicesUsedByTemplatesFromBundler =\n      // @ts-ignore GATSBY_SLICES_BY_TEMPLATE is being \"inlined\" by bundler\n      GATSBY_SLICES_BY_TEMPLATE as {\n        [key: string]: { [key: string]: ICollectedSlice }\n      }\n    const slicesUsedByTemplates: IGatsbyState[\"slicesByTemplate\"] = new Map()\n    for (const [key, value] of Object.entries(\n      slicesUsedByTemplatesFromBundler\n    )) {\n      slicesUsedByTemplates.set(key, value)\n    }\n\n    // TODO: optimize this to only pass name for slices, as it's only used for validation\n\n    const results = await constructPageDataString(\n      {\n        componentChunkName: data.page.componentChunkName,\n        path: getPath(data),\n        matchPath: data.page.matchPath,\n        staticQueryHashes: data.templateDetails.staticQueryHashes,\n        componentPath,\n        slices: sliceOverrides,\n      },\n      JSON.stringify(data.results),\n      slicesUsedByTemplates,\n      slices\n    )\n\n    return JSON.parse(results)\n  } finally {\n    if (activity) {\n      activity.end()\n    }\n  }\n}\n\nconst readStaticQueryContext = async (\n  templatePath: string\n): Promise<Record<string, { data: unknown }>> => {\n  const filePath = path.join(\n    __dirname,\n    `sq-context`,\n    templatePath,\n    `sq-context.json`\n  )\n  const rawSQContext = await fs.readFile(filePath, `utf-8`)\n\n  return JSON.parse(rawSQContext)\n}\n\nconst readSliceData = async (\n  sliceName: string\n): Promise<Record<string, { data: unknown }>> => {\n  const filePath = path.join(__dirname, `slice-data`, `${sliceName}.json`)\n\n  const rawSliceData = await fs.readFile(filePath, `utf-8`)\n  return JSON.parse(rawSliceData)\n}\n\nexport async function renderHTML({\n  data,\n  pageData,\n  spanContext,\n}: {\n  data: ISSRData\n  pageData?: IPageDataWithQueryResult\n  spanContext?: Span | SpanContext\n}): Promise<string> {\n  await tracerReadyPromise\n\n  let wrapperActivity: MaybePhantomActivity\n  try {\n    if (spanContext) {\n      wrapperActivity = reporter.phantomActivity(`Rendering HTML`, {\n        parentSpan: spanContext,\n      })\n      wrapperActivity.start()\n    }\n\n    if (!pageData) {\n      pageData = await renderPageData({\n        data,\n        spanContext: wrapperActivity?.span,\n      })\n    }\n\n    let readStaticQueryContextActivity: MaybePhantomActivity\n    let staticQueryContext: Record<string, { data: unknown }>\n    try {\n      if (wrapperActivity) {\n        readStaticQueryContextActivity = reporter.phantomActivity(\n          `Preparing StaticQueries context`,\n          {\n            parentSpan: wrapperActivity.span,\n          }\n        )\n        readStaticQueryContextActivity.start()\n      }\n      staticQueryContext = await readStaticQueryContext(\n        data.page.componentChunkName\n      )\n    } finally {\n      if (readStaticQueryContextActivity) {\n        readStaticQueryContextActivity.end()\n      }\n    }\n\n    const sliceData = {}\n    if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n      for (const sliceName of Object.values(pageData.slicesMap)) {\n        sliceData[sliceName] = await readSliceData(sliceName)\n      }\n    }\n\n    let renderHTMLActivity: MaybePhantomActivity\n    try {\n      if (wrapperActivity) {\n        renderHTMLActivity = reporter.phantomActivity(\n          `Actually rendering HTML`,\n          {\n            parentSpan: wrapperActivity.span,\n          }\n        )\n        renderHTMLActivity.start()\n      }\n\n      const pagePath = getPath(data)\n      const results = await htmlComponentRenderer({\n        pagePath,\n        pageData,\n        staticQueryContext,\n        webpackCompilationHash: WEBPACK_COMPILATION_HASH,\n        ...data.templateDetails.assets,\n        inlinePageData: data.page.mode === `SSR` && data.results.serverData,\n        sliceData,\n      })\n\n      return results.html.replace(\n        `<slice-start id=\"_gatsby-scripts-1\"></slice-start><slice-end id=\"_gatsby-scripts-1\"></slice-end>`,\n        GATSBY_SLICES_SCRIPT\n      )\n    } finally {\n      if (renderHTMLActivity) {\n        renderHTMLActivity.end()\n      }\n    }\n  } finally {\n    if (wrapperActivity) {\n      wrapperActivity.end()\n    }\n  }\n}\n"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"entry.js","names":["tracerReadyPromise","initTracer","process","env","GATSBY_OPEN_TRACING_CONFIG_FILE","getData","pathName","graphqlEngine","req","spanContext","telemetryResolverTimings","getDataWrapperActivity","reporter","phantomActivity","parentSpan","start","page","templateDetails","potentialPagePath","findMetaActivity","span","getPagePathFromPageDataPath","maybePage","findPageByPath","Error","INLINED_TEMPLATE_TO_DETAILS","componentChunkName","end","executionPromises","results","serverData","query","runningQueryActivity","push","runQuery","context","queryName","path","componentPath","forceGraphqlTracing","then","queryResults","errors","length","e","codeFrame","getCodeFrame","locations","line","column","queryRunningError","message","stack","finally","mode","runningGetServerDataActivity","getPageChunk","mod","getServerData","serverDataResults","Promise","all","props","pageContext","searchString","maybeQueryString","Object","entries","map","k","v","encodeURIComponent","join","serverDataHeaders","headers","serverDataStatus","status","getPath","data","matchPath","renderPageData","activity","sliceOverrides","slices","slicesFromBundler","GATSBY_SLICES","Map","key","value","set","slicesUsedByTemplatesFromBundler","GATSBY_SLICES_BY_TEMPLATE","slicesUsedByTemplates","constructPageDataString","staticQueryHashes","JSON","stringify","parse","readStaticQueryContext","templatePath","filePath","__dirname","rawSQContext","fs","readFile","readSliceData","sliceName","rawSliceData","renderHTML","pageData","wrapperActivity","sliceData","readSliceDataActivity","values","slicesMap","readStaticQueryContextActivity","staticQueryContext","uniqueUsedComponentChunkNames","singleSliceData","includes","contextsToMerge","assign","renderHTMLActivity","pagePath","htmlComponentRenderer","webpackCompilationHash","WEBPACK_COMPILATION_HASH","assets","inlinePageData","html","replace","GATSBY_SLICES_SCRIPT"],"sources":["../../../src/utils/page-ssr-module/entry.ts"],"sourcesContent":["// \"engines-fs-provider\" must be first import, as it sets up global\n// fs and this need to happen before anything else tries to import fs\nimport \"../engines-fs-provider\"\n\n// just types - those should not be bundled\nimport type { GraphQLEngine } from \"../../schema/graphql-engine/entry\"\nimport type { IExecutionResult } from \"../../query/types\"\nimport type { IGatsbyPage, IGatsbySlice, IGatsbyState } from \"../../redux/types\"\nimport { IGraphQLTelemetryRecord } from \"../../schema/type-definitions\"\nimport type { IScriptsAndStyles } from \"../client-assets-for-template\"\nimport type { IPageDataWithQueryResult, ISliceData } from \"../page-data\"\nimport type { Request } from \"express\"\nimport type { Span, SpanContext } from \"opentracing\"\n\n// actual imports\nimport * as path from \"path\"\nimport * as fs from \"fs-extra\"\nimport {\n  constructPageDataString,\n  getPagePathFromPageDataPath,\n} from \"../page-data-helpers\"\n// @ts-ignore render-page import will become valid later on (it's marked as external)\nimport htmlComponentRenderer, { getPageChunk } from \"./routes/render-page\"\nimport { getServerData, IServerData } from \"../get-server-data\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { initTracer } from \"../tracer\"\nimport { getCodeFrame } from \"../../query/graphql-errors-codeframe\"\nimport { ICollectedSlice } from \"../babel/find-slices\"\n\nexport interface ITemplateDetails {\n  query: string\n  staticQueryHashes: Array<string>\n  assets: IScriptsAndStyles\n}\nexport interface ISSRData {\n  results: IExecutionResult\n  page: IGatsbyPage\n  templateDetails: ITemplateDetails\n  potentialPagePath: string\n  serverDataHeaders?: Record<string, string>\n  serverDataStatus?: number\n  searchString: string\n}\n\n// just letting TypeScript know about injected data\n// with DefinePlugin\ndeclare global {\n  const INLINED_TEMPLATE_TO_DETAILS: Record<string, ITemplateDetails>\n  const WEBPACK_COMPILATION_HASH: string\n  const GATSBY_SLICES_SCRIPT: string\n}\n\nconst tracerReadyPromise = initTracer(\n  process.env.GATSBY_OPEN_TRACING_CONFIG_FILE ?? ``\n)\n\ntype MaybePhantomActivity =\n  | ReturnType<typeof reporter.phantomActivity>\n  | undefined\n\nexport async function getData({\n  pathName,\n  graphqlEngine,\n  req,\n  spanContext,\n  telemetryResolverTimings,\n}: {\n  graphqlEngine: GraphQLEngine\n  pathName: string\n  req?: Partial<Pick<Request, \"query\" | \"method\" | \"url\" | \"headers\">>\n  spanContext?: Span | SpanContext\n  telemetryResolverTimings?: Array<IGraphQLTelemetryRecord>\n}): Promise<ISSRData> {\n  await tracerReadyPromise\n\n  let getDataWrapperActivity: MaybePhantomActivity\n  try {\n    if (spanContext) {\n      getDataWrapperActivity = reporter.phantomActivity(`Running getData`, {\n        parentSpan: spanContext,\n      })\n      getDataWrapperActivity.start()\n    }\n\n    let page: IGatsbyPage\n    let templateDetails: ITemplateDetails\n    let potentialPagePath: string\n    let findMetaActivity: MaybePhantomActivity\n    try {\n      if (getDataWrapperActivity) {\n        findMetaActivity = reporter.phantomActivity(\n          `Finding details about page and template`,\n          {\n            parentSpan: getDataWrapperActivity.span,\n          }\n        )\n        findMetaActivity.start()\n      }\n      potentialPagePath = getPagePathFromPageDataPath(pathName) || pathName\n\n      // 1. Find a page for pathname\n      const maybePage = graphqlEngine.findPageByPath(potentialPagePath)\n\n      if (!maybePage) {\n        // page not found, nothing to run query for\n        throw new Error(`Page for \"${pathName}\" not found`)\n      }\n\n      page = maybePage\n\n      // 2. Lookup query used for a page (template)\n      templateDetails = INLINED_TEMPLATE_TO_DETAILS[page.componentChunkName]\n      if (!templateDetails) {\n        throw new Error(\n          `Page template details for \"${page.componentChunkName}\" not found`\n        )\n      }\n    } finally {\n      if (findMetaActivity) {\n        findMetaActivity.end()\n      }\n    }\n\n    const executionPromises: Array<Promise<any>> = []\n\n    // 3. Execute query\n    // query-runner handles case when query is not there - so maybe we should consider using that somehow\n    let results: IExecutionResult = {}\n    let serverData: IServerData | undefined\n    if (templateDetails.query) {\n      let runningQueryActivity: MaybePhantomActivity\n      if (getDataWrapperActivity) {\n        runningQueryActivity = reporter.phantomActivity(`Running page query`, {\n          parentSpan: getDataWrapperActivity.span,\n        })\n        runningQueryActivity.start()\n      }\n      executionPromises.push(\n        graphqlEngine\n          .runQuery(\n            templateDetails.query,\n            {\n              ...page,\n              ...page.context,\n            },\n            {\n              queryName: page.path,\n              componentPath: page.componentPath,\n              parentSpan: runningQueryActivity?.span,\n              forceGraphqlTracing: !!runningQueryActivity,\n              telemetryResolverTimings,\n            }\n          )\n          .then(queryResults => {\n            if (queryResults.errors && queryResults.errors.length > 0) {\n              const e = queryResults.errors[0]\n              const codeFrame = getCodeFrame(\n                templateDetails.query,\n                e.locations && e.locations[0].line,\n                e.locations && e.locations[0].column\n              )\n\n              const queryRunningError = new Error(\n                e.message + `\\n\\n` + codeFrame\n              )\n              queryRunningError.stack = e.stack\n              throw queryRunningError\n            } else {\n              results = queryResults\n            }\n          })\n          .finally(() => {\n            if (runningQueryActivity) {\n              runningQueryActivity.end()\n            }\n          })\n      )\n    }\n\n    // 4. (if SSR) run getServerData\n    if (page.mode === `SSR`) {\n      let runningGetServerDataActivity: MaybePhantomActivity\n      if (getDataWrapperActivity) {\n        runningGetServerDataActivity = reporter.phantomActivity(\n          `Running getServerData`,\n          {\n            parentSpan: getDataWrapperActivity.span,\n          }\n        )\n        runningGetServerDataActivity.start()\n      }\n      executionPromises.push(\n        getPageChunk(page)\n          .then(mod => getServerData(req, page, potentialPagePath, mod))\n          .then(serverDataResults => {\n            serverData = serverDataResults\n          })\n          .finally(() => {\n            if (runningGetServerDataActivity) {\n              runningGetServerDataActivity.end()\n            }\n          })\n      )\n    }\n\n    await Promise.all(executionPromises)\n\n    if (serverData) {\n      results.serverData = serverData.props\n    }\n    results.pageContext = page.context\n\n    let searchString = ``\n\n    if (req?.query) {\n      const maybeQueryString = Object.entries(req.query)\n        .map(\n          ([k, v]) =>\n            // Preserve QueryString encoding\n            `${encodeURIComponent(k)}=${encodeURIComponent(v as string)}`\n        )\n        .join(`&`)\n      if (maybeQueryString) {\n        searchString = `?${maybeQueryString}`\n      }\n    }\n\n    return {\n      results,\n      page,\n      templateDetails,\n      potentialPagePath,\n      serverDataHeaders: serverData?.headers,\n      serverDataStatus: serverData?.status,\n      searchString,\n    }\n  } finally {\n    if (getDataWrapperActivity) {\n      getDataWrapperActivity.end()\n    }\n  }\n}\n\nfunction getPath(data: ISSRData): string {\n  return (\n    (data.page.mode !== `SSG` && data.page.matchPath\n      ? data.potentialPagePath\n      : data.page.path) + (data.page.mode === `SSR` ? data.searchString : ``)\n  )\n}\n\nexport async function renderPageData({\n  data,\n  spanContext,\n}: {\n  data: ISSRData\n  spanContext?: Span | SpanContext\n}): Promise<IPageDataWithQueryResult> {\n  await tracerReadyPromise\n\n  let activity: MaybePhantomActivity\n  try {\n    if (spanContext) {\n      activity = reporter.phantomActivity(`Rendering page-data`, {\n        parentSpan: spanContext,\n      })\n      activity.start()\n    }\n\n    const componentPath = data.page.componentPath\n    const sliceOverrides = data.page.slices\n\n    // @ts-ignore GATSBY_SLICES is being \"inlined\" by bundler\n    const slicesFromBundler = GATSBY_SLICES as {\n      [key: string]: IGatsbySlice\n    }\n    const slices: IGatsbyState[\"slices\"] = new Map()\n    for (const [key, value] of Object.entries(slicesFromBundler)) {\n      slices.set(key, value)\n    }\n\n    const slicesUsedByTemplatesFromBundler =\n      // @ts-ignore GATSBY_SLICES_BY_TEMPLATE is being \"inlined\" by bundler\n      GATSBY_SLICES_BY_TEMPLATE as {\n        [key: string]: { [key: string]: ICollectedSlice }\n      }\n    const slicesUsedByTemplates: IGatsbyState[\"slicesByTemplate\"] = new Map()\n    for (const [key, value] of Object.entries(\n      slicesUsedByTemplatesFromBundler\n    )) {\n      slicesUsedByTemplates.set(key, value)\n    }\n\n    // TODO: optimize this to only pass name for slices, as it's only used for validation\n\n    const results = await constructPageDataString(\n      {\n        componentChunkName: data.page.componentChunkName,\n        path: getPath(data),\n        matchPath: data.page.matchPath,\n        staticQueryHashes: data.templateDetails.staticQueryHashes,\n        componentPath,\n        slices: sliceOverrides,\n      },\n      JSON.stringify(data.results),\n      slicesUsedByTemplates,\n      slices\n    )\n\n    return JSON.parse(results)\n  } finally {\n    if (activity) {\n      activity.end()\n    }\n  }\n}\n\nconst readStaticQueryContext = async (\n  templatePath: string\n): Promise<Record<string, { data: unknown }>> => {\n  const filePath = path.join(\n    __dirname,\n    `sq-context`,\n    templatePath,\n    `sq-context.json`\n  )\n  const rawSQContext = await fs.readFile(filePath, `utf-8`)\n\n  return JSON.parse(rawSQContext)\n}\n\nconst readSliceData = async (sliceName: string): Promise<ISliceData> => {\n  const filePath = path.join(__dirname, `slice-data`, `${sliceName}.json`)\n\n  const rawSliceData = await fs.readFile(filePath, `utf-8`)\n  return JSON.parse(rawSliceData)\n}\n\nexport async function renderHTML({\n  data,\n  pageData,\n  spanContext,\n}: {\n  data: ISSRData\n  pageData?: IPageDataWithQueryResult\n  spanContext?: Span | SpanContext\n}): Promise<string> {\n  await tracerReadyPromise\n\n  let wrapperActivity: MaybePhantomActivity\n  try {\n    if (spanContext) {\n      wrapperActivity = reporter.phantomActivity(`Rendering HTML`, {\n        parentSpan: spanContext,\n      })\n      wrapperActivity.start()\n    }\n\n    if (!pageData) {\n      pageData = await renderPageData({\n        data,\n        spanContext: wrapperActivity?.span,\n      })\n    }\n\n    const sliceData: Record<string, ISliceData> = {}\n    if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n      let readSliceDataActivity: MaybePhantomActivity\n      try {\n        if (wrapperActivity) {\n          readSliceDataActivity = reporter.phantomActivity(\n            `Preparing slice-data`,\n            {\n              parentSpan: wrapperActivity.span,\n            }\n          )\n          readSliceDataActivity.start()\n        }\n        for (const sliceName of Object.values(pageData.slicesMap)) {\n          sliceData[sliceName] = await readSliceData(sliceName)\n        }\n      } finally {\n        if (readSliceDataActivity) {\n          readSliceDataActivity.end()\n        }\n      }\n    }\n\n    let readStaticQueryContextActivity: MaybePhantomActivity\n    let staticQueryContext: Record<string, { data: unknown }>\n    try {\n      if (wrapperActivity) {\n        readStaticQueryContextActivity = reporter.phantomActivity(\n          `Preparing StaticQueries context`,\n          {\n            parentSpan: wrapperActivity.span,\n          }\n        )\n        readStaticQueryContextActivity.start()\n      }\n\n      const uniqueUsedComponentChunkNames = [data.page.componentChunkName]\n      for (const singleSliceData of Object.values(sliceData)) {\n        if (\n          singleSliceData.componentChunkName &&\n          !uniqueUsedComponentChunkNames.includes(\n            singleSliceData.componentChunkName\n          )\n        ) {\n          uniqueUsedComponentChunkNames.push(singleSliceData.componentChunkName)\n        }\n      }\n\n      const contextsToMerge = await Promise.all(\n        uniqueUsedComponentChunkNames.map(readStaticQueryContext)\n      )\n\n      staticQueryContext = Object.assign({}, ...contextsToMerge)\n    } finally {\n      if (readStaticQueryContextActivity) {\n        readStaticQueryContextActivity.end()\n      }\n    }\n\n    let renderHTMLActivity: MaybePhantomActivity\n    try {\n      if (wrapperActivity) {\n        renderHTMLActivity = reporter.phantomActivity(\n          `Actually rendering HTML`,\n          {\n            parentSpan: wrapperActivity.span,\n          }\n        )\n        renderHTMLActivity.start()\n      }\n\n      const pagePath = getPath(data)\n      const results = await htmlComponentRenderer({\n        pagePath,\n        pageData,\n        staticQueryContext,\n        webpackCompilationHash: WEBPACK_COMPILATION_HASH,\n        ...data.templateDetails.assets,\n        inlinePageData: data.page.mode === `SSR` && data.results.serverData,\n        sliceData,\n      })\n\n      return results.html.replace(\n        `<slice-start id=\"_gatsby-scripts-1\"></slice-start><slice-end id=\"_gatsby-scripts-1\"></slice-end>`,\n        GATSBY_SLICES_SCRIPT\n      )\n    } finally {\n      if (renderHTMLActivity) {\n        renderHTMLActivity.end()\n      }\n    }\n  } finally {\n    if (wrapperActivity) {\n      wrapperActivity.end()\n    }\n  }\n}\n"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/gatsby/scripts/check-declaration.js b/node_modules/gatsby/scripts/check-declaration.js
new file mode 100644
index 0000000..054b68d
--- /dev/null
+++ b/node_modules/gatsby/scripts/check-declaration.js
@@ -0,0 +1,9 @@
+const fs = require(`fs-extra`)
+const path = require(`path`)
+
+const absPath = path.join(__dirname, '..', `./dist/internal.d.ts`)
+
+if (!fs.existsSync(absPath)) {
+  console.error(`Expected "internal.d.ts" file doesn't exist at "${absPath}`)
+  process.exit(1)
+}
\ No newline at end of file
diff --git a/node_modules/gatsby/scripts/output-api-file.js b/node_modules/gatsby/scripts/output-api-file.js
new file mode 100644
index 0000000..4603321
--- /dev/null
+++ b/node_modules/gatsby/scripts/output-api-file.js
@@ -0,0 +1,53 @@
+const path = require("path")
+const documentation = require("documentation")
+const fs = require("fs-extra")
+
+const OUTPUT_FILE_NAME = `apis.json`
+
+async function outputFile() {
+  const apis = await Promise.all(
+    [
+      path.join("cache-dir", "api-ssr-docs.js"),
+      path.join("src", "utils", "api-browser-docs.ts"),
+      path.join("src", "utils", "api-node-docs.ts")
+    ].map(filePath => {
+      const resolved = path.resolve(filePath)
+      const [, api] = path.basename(filePath).split("-")
+      return documentation
+        .build(resolved, {
+          shallow: true
+        })
+        .then(contents => {
+          return [contents, api]
+        })
+    })
+  )
+
+  const output = apis.reduce((merged, [output, api]) => {
+    merged[api] = output.reduce((mergedOutput, doc, i) => {
+      if (doc.kind === "typedef") return mergedOutput
+
+      const tags = doc.tags.reduce((mergedTags, tag) => {
+        mergedTags[tag.title] = tag.description
+        return mergedTags
+      }, {})
+      mergedOutput[doc.name] = {
+        deprecated: !!tags.deprecated || undefined,
+        version: tags.gatsbyVersion
+      }
+      return mergedOutput
+    }, {})
+    return merged
+  }, {})
+
+  /** @type {Array<import("../index").AvailableFeatures>} */
+  output.features = ["image-cdn", "graphql-typegen", "content-file-path", "slices"];
+
+  return fs.writeFile(
+    path.resolve(OUTPUT_FILE_NAME),
+    JSON.stringify(output, null, 2),
+    "utf8"
+  )
+}
+
+outputFile()
diff --git a/node_modules/gatsby/sharp.d.ts b/node_modules/gatsby/sharp.d.ts
new file mode 100644
index 0000000..8453179
--- /dev/null
+++ b/node_modules/gatsby/sharp.d.ts
@@ -0,0 +1,3 @@
+import getSharpInstance from "gatsby-sharp"
+
+export = getSharpInstance
diff --git a/node_modules/gatsby/sharp.js b/node_modules/gatsby/sharp.js
new file mode 100644
index 0000000..ac7150f
--- /dev/null
+++ b/node_modules/gatsby/sharp.js
@@ -0,0 +1,3 @@
+"use strict"
+
+module.exports = require('gatsby-sharp');
diff --git a/node_modules/gatsby/tsconfig.json b/node_modules/gatsby/tsconfig.json
new file mode 100644
index 0000000..a6faaa7
--- /dev/null
+++ b/node_modules/gatsby/tsconfig.json
@@ -0,0 +1,6 @@
+{
+  "extends": "../../tsconfig.json",
+  // For now index.d.ts is manually-created, but gatsby/internal is auto-generated
+  "include": ["src/**/*.ts"],
+  "exclude": ["**/__tests__/**/*"]
+}
